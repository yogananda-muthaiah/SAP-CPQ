Name,Type,Description,IsPrimitive,AssemblyName,IsFunction,PropertiesAndFunctions.Name,PropertiesAndFunctions.Type,PropertiesAndFunctions.Description,PropertiesAndFunctions.IsPrimitive,PropertiesAndFunctions.AssemblyName,PropertiesAndFunctions.IsFunction,PropertiesAndFunctions.FunctionArgs.Name,PropertiesAndFunctions.FunctionArgs.Type,PropertiesAndFunctions.FunctionArgs.Description,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"FileResponse (contentType, content)",Scripting.IApiResponse,"{""Title"":""IApiResponse FileResponse (string contentType, Byte[] content)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object by using the file content and file type.        \r\n            ""}",FALSE,Scripting,TRUE,contentType,string,The content type (MIME type).,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"FileResponse (contentType, content)",Scripting.IApiResponse,"{""Title"":""IApiResponse FileResponse (string contentType, Byte[] content)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object by using the file content and file type.        \r\n            ""}",FALSE,Scripting,TRUE,content,Byte[],The binary content to send to the response.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"FileResponse (contentType, content, fileName)",Scripting.IApiResponse,"{""Title"":""IApiResponse FileResponse (string contentType, Byte[] content, string fileName)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object by using the file content, file type and file name.        \r\n            ""}",FALSE,Scripting,TRUE,contentType,string,The content type (MIME type).,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"FileResponse (contentType, content, fileName)",Scripting.IApiResponse,"{""Title"":""IApiResponse FileResponse (string contentType, Byte[] content, string fileName)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object by using the file content, file type and file name.        \r\n            ""}",FALSE,Scripting,TRUE,content,Byte[],The binary content to send to the response.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"FileResponse (contentType, content, fileName)",Scripting.IApiResponse,"{""Title"":""IApiResponse FileResponse (string contentType, Byte[] content, string fileName)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object by using the file content, file type and file name.        \r\n            ""}",FALSE,Scripting,TRUE,fileName,string,The file name to use in the file-download dialog box that is displayed in the browser,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,HtmlResponse (html),Scripting.IApiResponse,"{""Title"":""IApiResponse HtmlResponse (string html)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object that redner the HTML to response.\r\n            ""}",FALSE,Scripting,TRUE,html,string,The HTML that renders to the response.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"HtmlResponse (html, statusCode)",Scripting.IApiResponse,"{""Title"":""IApiResponse HtmlResponse (string html, int statusCode)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object that redner the HTML to response.\r\n            ""}",FALSE,Scripting,TRUE,html,string,The HTML that renders to the response.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"HtmlResponse (html, statusCode)",Scripting.IApiResponse,"{""Title"":""IApiResponse HtmlResponse (string html, int statusCode)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object that redner the HTML to response.\r\n            ""}",FALSE,Scripting,TRUE,statusCode,int,Response status code.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,JsonResponse (json),Scripting.IApiResponse,"{""Title"":""IApiResponse JsonResponse (Object json)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object that serializes the specified object to JavaScript Object Notation (JSON) format.\r\n            ""}",FALSE,Scripting,TRUE,json,Object,The JavaScript object graph to serialize.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"JsonResponse (json, statusCode)",Scripting.IApiResponse,"{""Title"":""IApiResponse JsonResponse (Object json, int statusCode)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object that serializes the specified object to JavaScript Object Notation (JSON) format.\r\n            ""}",FALSE,Scripting,TRUE,json,Object,The JavaScript object graph to serialize.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,"JsonResponse (json, statusCode)",Scripting.IApiResponse,"{""Title"":""IApiResponse JsonResponse (Object json, int statusCode)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object that serializes the specified object to JavaScript Object Notation (JSON) format.\r\n            ""}",FALSE,Scripting,TRUE,statusCode,int,Response status code.,,,,
ApiResponseFactory,Scripting.IApiResponseFactory,"{""Title"":""interface Scripting.IApiResponseFactory"",""Summary"":""\r\n            API Response\r\n            ""}",FALSE,Scripting,FALSE,RedirectResponse (url),Scripting.IApiResponse,"{""Title"":""IApiResponse RedirectResponse (string url)"",""Summary"":""\r\n            Creates a <see cref=\""T:Scripting.IApiResponse\"" /> object that redirects browser to specified url.\r\n            ""}",FALSE,Scripting,TRUE,url,string,Redirection url,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreEqual (expected, actual)",System.Void,"{""Title"":""void AreEqual (Object expected, Object actual)"",""Summary"":""\r\n            Verifies that two objects are equal.\r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are not equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,expected,Object,The value that is expected,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreEqual (expected, actual)",System.Void,"{""Title"":""void AreEqual (Object expected, Object actual)"",""Summary"":""\r\n            Verifies that two objects are equal.\r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are not equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,actual,Object,The actual value,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreEqual (expected, actual, message)",System.Void,"{""Title"":""void AreEqual (Object expected, Object actual, string message)"",""Summary"":""\r\n            Verifies that two objects are equal.\r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are not equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,expected,Object,The value that is expected,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreEqual (expected, actual, message)",System.Void,"{""Title"":""void AreEqual (Object expected, Object actual, string message)"",""Summary"":""\r\n            Verifies that two objects are equal.\r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are not equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,actual,Object,The actual value,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreEqual (expected, actual, message)",System.Void,"{""Title"":""void AreEqual (Object expected, Object actual, string message)"",""Summary"":""\r\n            Verifies that two objects are equal.\r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are not equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreNotEqual (expected, actual)",System.Void,"{""Title"":""void AreNotEqual (Object expected, Object actual)"",""Summary"":""\r\n            Verifies that two objects are not equal. \r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,expected,Object,The value that is expected,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreNotEqual (expected, actual)",System.Void,"{""Title"":""void AreNotEqual (Object expected, Object actual)"",""Summary"":""\r\n            Verifies that two objects are not equal. \r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,actual,Object,The actual value,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreNotEqual (expected, actual, message)",System.Void,"{""Title"":""void AreNotEqual (Object expected, Object actual, string message)"",""Summary"":""\r\n            Verifies that two objects are not equal. \r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,expected,Object,The value that is expected,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreNotEqual (expected, actual, message)",System.Void,"{""Title"":""void AreNotEqual (Object expected, Object actual, string message)"",""Summary"":""\r\n            Verifies that two objects are not equal. \r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,actual,Object,The actual value,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"AreNotEqual (expected, actual, message)",System.Void,"{""Title"":""void AreNotEqual (Object expected, Object actual, string message)"",""Summary"":""\r\n            Verifies that two objects are not equal. \r\n            Two objects are considered equal if both are null, or if both have the same value. \r\n            If they are equal an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"Contains (expected, actual)",System.Void,"{""Title"":""void Contains (Object expected, ICollection actual)"",""Summary"":""\r\n            Asserts that an object is contained in a list.\r\n            ""}",TRUE,mscorlib,TRUE,expected,Object,The expected object,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"Contains (expected, actual)",System.Void,"{""Title"":""void Contains (Object expected, ICollection actual)"",""Summary"":""\r\n            Asserts that an object is contained in a list.\r\n            ""}",TRUE,mscorlib,TRUE,actual,ICollection,The list to be examined,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"Contains (expected, actual, message)",System.Void,"{""Title"":""void Contains (Object expected, ICollection actual, string message)"",""Summary"":""\r\n            Asserts that an object is contained in a list.\r\n            ""}",TRUE,mscorlib,TRUE,expected,Object,The expected object,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"Contains (expected, actual, message)",System.Void,"{""Title"":""void Contains (Object expected, ICollection actual, string message)"",""Summary"":""\r\n            Asserts that an object is contained in a list.\r\n            ""}",TRUE,mscorlib,TRUE,actual,ICollection,The list to be examined,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"Contains (expected, actual, message)",System.Void,"{""Title"":""void Contains (Object expected, ICollection actual, string message)"",""Summary"":""\r\n            Asserts that an object is contained in a list.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,Fail (message),System.Void,"{""Title"":""void Fail (string message)"",""Summary"":""\r\n            Throws an exception with the message that is passed in.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to initialize the exception with.,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsEmpty (aString),System.Void,"{""Title"":""void IsEmpty (string aString)"",""Summary"":""\r\n            Assert that a string is empty - that is equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsEmpty (aString, message)",System.Void,"{""Title"":""void IsEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is empty - that is equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsEmpty (aString, message)",System.Void,"{""Title"":""void IsEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is empty - that is equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsEmpty (collection),System.Void,"{""Title"":""void IsEmpty (IEnumerable collection)"",""Summary"":""\r\n            Assert that an array, list or other collection is empty\r\n            ""}",TRUE,mscorlib,TRUE,collection,IEnumerable,"An array, list or other collection implementing ICollection",,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsEmpty (collection, message)",System.Void,"{""Title"":""void IsEmpty (IEnumerable collection, string message)"",""Summary"":""\r\n            Assert that an array, list or other collection is empty\r\n            ""}",TRUE,mscorlib,TRUE,collection,IEnumerable,"An array, list or other collection implementing ICollection",,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsEmpty (collection, message)",System.Void,"{""Title"":""void IsEmpty (IEnumerable collection, string message)"",""Summary"":""\r\n            Assert that an array, list or other collection is empty\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsFalse (condition),System.Void,"{""Title"":""void IsFalse (bool condition)"",""Summary"":""\r\n            Asserts that a condition is false. If the condition is true the method throws an exception.\r\n            ""}",TRUE,mscorlib,TRUE,condition,bool,The evaluated condition,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsFalse (condition, message)",System.Void,"{""Title"":""void IsFalse (bool condition, string message)"",""Summary"":""\r\n            Asserts that a condition is false. If the condition is true the method throws an exception.\r\n            ""}",TRUE,mscorlib,TRUE,condition,bool,The evaluated condition,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsFalse (condition, message)",System.Void,"{""Title"":""void IsFalse (bool condition, string message)"",""Summary"":""\r\n            Asserts that a condition is false. If the condition is true the method throws an exception.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsNotEmpty (aString),System.Void,"{""Title"":""void IsNotEmpty (string aString)"",""Summary"":""\r\n            Assert that a string is not empty - that is not equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotEmpty (aString, message)",System.Void,"{""Title"":""void IsNotEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is not empty - that is not equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotEmpty (aString, message)",System.Void,"{""Title"":""void IsNotEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is not empty - that is not equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsNotEmpty (collection),System.Void,"{""Title"":""void IsNotEmpty (IEnumerable collection)"",""Summary"":""\r\n            Assert that an array, list or other collection is not empty\r\n            ""}",TRUE,mscorlib,TRUE,collection,IEnumerable,"An array, list or other collection implementing ICollection",,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotEmpty (collection, message)",System.Void,"{""Title"":""void IsNotEmpty (IEnumerable collection, string message)"",""Summary"":""\r\n            Assert that an array, list or other collection is not empty\r\n            ""}",TRUE,mscorlib,TRUE,collection,IEnumerable,"An array, list or other collection implementing ICollection",,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotEmpty (collection, message)",System.Void,"{""Title"":""void IsNotEmpty (IEnumerable collection, string message)"",""Summary"":""\r\n            Assert that an array, list or other collection is not empty\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsNotNull (anObject),System.Void,"{""Title"":""void IsNotNull (Object anObject)"",""Summary"":""\r\n            Verifies that the object that is passed in is not equal to null\r\n            If the object is null then an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,anObject,Object,The object that is to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotNull (anObject, message)",System.Void,"{""Title"":""void IsNotNull (Object anObject, string message)"",""Summary"":""\r\n            Verifies that the object that is passed in is not equal to null.\r\n            If the object is null then an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,anObject,Object,The object that is to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotNull (anObject, message)",System.Void,"{""Title"":""void IsNotNull (Object anObject, string message)"",""Summary"":""\r\n            Verifies that the object that is passed in is not equal to null.\r\n            If the object is null then an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsNotNullOrEmpty (aString),System.Void,"{""Title"":""void IsNotNullOrEmpty (string aString)"",""Summary"":""\r\n            Assert that a string is not null or empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotNullOrEmpty (aString, message)",System.Void,"{""Title"":""void IsNotNullOrEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is not null or empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNotNullOrEmpty (aString, message)",System.Void,"{""Title"":""void IsNotNullOrEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is not null or empty\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsNull (anObject),System.Void,"{""Title"":""void IsNull (Object anObject)"",""Summary"":""\r\n            Verifies that the object that is passed in is equal to null\r\n            If the object is not null then an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,anObject,Object,The object that is to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNull (anObject, message)",System.Void,"{""Title"":""void IsNull (Object anObject, string message)"",""Summary"":""\r\n            Verifies that the object that is passed in is equal to null\r\n            If the object is not null then an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,anObject,Object,The object that is to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNull (anObject, message)",System.Void,"{""Title"":""void IsNull (Object anObject, string message)"",""Summary"":""\r\n            Verifies that the object that is passed in is equal to null\r\n            If the object is not null then an exception is thrown.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsNullOrEmpty (aString),System.Void,"{""Title"":""void IsNullOrEmpty (string aString)"",""Summary"":""\r\n            Assert that a string is either null or equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNullOrEmpty (aString, message)",System.Void,"{""Title"":""void IsNullOrEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is either null or equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,aString,string,The string to be tested,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsNullOrEmpty (aString, message)",System.Void,"{""Title"":""void IsNullOrEmpty (string aString, string message)"",""Summary"":""\r\n            Assert that a string is either null or equal to string.Empty\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,IsTrue (condition),System.Void,"{""Title"":""void IsTrue (bool condition)"",""Summary"":""\r\n            Asserts that a condition is true. If the condition is false the method throws an exception.\r\n            ""}",TRUE,mscorlib,TRUE,condition,bool,The evaluated condition,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsTrue (condition, message)",System.Void,"{""Title"":""void IsTrue (bool condition, string message)"",""Summary"":""\r\n            Asserts that a condition is true. If the condition is false the method throws an exception.\r\n            ""}",TRUE,mscorlib,TRUE,condition,bool,The evaluated condition,,,,
Assert,Scripting.IAssert,"{""Title"":""interface Scripting.IAssert"",""Summary"":""\r\n            Class containing helper assert methods.\r\n            Primary usage should be for writing automated tests although it can be used also in production scripts for guard clauses.\r\n            ""}",FALSE,Scripting,FALSE,"IsTrue (condition, message)",System.Void,"{""Title"":""void IsTrue (bool condition, string message)"",""Summary"":""\r\n            Asserts that a condition is true. If the condition is false the method throws an exception.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message to display in case of failure,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,DeserializeJson (input),System.Object,"{""Title"":""Object DeserializeJson (string input)"",""Summary"":""\r\n            Deserializes the specified JSON input\r\n            ""}",TRUE,mscorlib,TRUE,input,string,The input string for deserialization,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             This overload will NOT URL encode request parameters before creating request. Make sure that the credentials under the provided entry are already URL encoded.\r\n             If credentials are needed to be URL encoded by default when making token request, call overload method with 'encodeRequestParameters' parameter set to true.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,Client credentials entry name from credentials store,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             This overload will NOT URL encode request parameters before creating request. Make sure that the credentials under the provided entry are already URL encoded.\r\n             If credentials are needed to be URL encoded by default when making token request, call overload method with 'encodeRequestParameters' parameter set to true.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,Client credentials entry name from credentials store,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,Whether the request parameters should be URL encoded,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,Client credentials entry name from credentials store,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,Whether the request parameters should be URL encoded,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetClientCredentialsGrantOAuthToken('myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=client_credentials\r\n             &amp",client_id=user@example.com\r\n             &amp,"client_secret=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetClientCredentialsGrantOAuthToken (clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetClientCredentialsGrantOAuthToken (string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             This overload will NOT URL encode request parameters before creating request. Make sure that the credentials under the provided entry are already URL encoded.\r\n             If credentials are needed to be URL encoded by default when making token request, call overload method with 'encodeRequestParameters' parameter set to true.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             headers = { \""MyHeaderName\"": \""MyHeaderValue\"" }\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,passwordEntryName,string,Password entry name from credentials store
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             This overload will NOT URL encode request parameters before creating request. Make sure that the credentials under the provided entry are already URL encoded.\r\n             If credentials are needed to be URL encoded by default when making token request, call overload method with 'encodeRequestParameters' parameter set to true.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             headers = { \""MyHeaderName\"": \""MyHeaderValue\"" }\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,Client credentials entry name from credentials store
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             This overload will NOT URL encode request parameters before creating request. Make sure that the credentials under the provided entry are already URL encoded.\r\n             If credentials are needed to be URL encoded by default when making token request, call overload method with 'encodeRequestParameters' parameter set to true.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             headers = { \""MyHeaderName\"": \""MyHeaderValue\"" }\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,passwordEntryName,string,Password entry name from credentials store
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,Client credentials entry name from credentials store
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,Whether the request parameters should be URL encoded
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,passwordEntryName,string,Password entry name from credentials store
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,Client credentials entry name from credentials store
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,Whether the request parameters should be URL encoded
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password and client id/client secret are required.\r\n             Example:\r\n             \r\n             Credentials store entry for password: \r\n              - Name: myPassEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n              \r\n             Credentials store entry for client credentials:\r\n              - Name: myClientCredEntry\r\n              - Identifier: MyApplicationClientID\r\n              - Secret: xxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myPassEntry', 'myClientCredEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,password=xxxxx\r\n             &amp,client_id=myClientCredEntry\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,passwordEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,clientCredentialsEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, clientCredentialsEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string clientCredentialsEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             This overload will NOT URL encode request parameters before creating request. Make sure that the credentials under the provided entry are already URL encoded.\r\n             If credentials are needed to be URL encoded by default when making token request, call overload method with 'encodeRequestParameters' parameter set to true.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,passwordEntryName,string,Password entry name from credentials store,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             This overload will NOT URL encode request parameters before creating request. Make sure that the credentials under the provided entry are already URL encoded.\r\n             If credentials are needed to be URL encoded by default when making token request, call overload method with 'encodeRequestParameters' parameter set to true.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,passwordEntryName,string,Password entry name from credentials store,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, encodeRequestParameters)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, bool encodeRequestParameters)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,Whether the request parameters should be URL encoded,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,passwordEntryName,string,Password entry name from credentials store,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified access token API URL,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,Whether the request parameters should be URL encoded,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n             Gets OAuth token by using password grant type and credentials from store.\r\n             Use this method if username/password is required.\r\n             Example:\r\n             \r\n             Credentials store entry: \r\n              - Name: myEntry\r\n              - Identifier: user@example.com\r\n              - Secret: xxxxx\r\n             \r\n             Following Iron Python code:\r\n             result = AuthorizedRestClient.GetPasswordGrantOAuthToken('myEntry', 'authorization-server.com/oauth/token')\r\n             \r\n             will transform into the following request:\r\n             \r\n             POST /oauth/token HTTP/1.1\r\n             Host: authorization-server.com\r\n             Content-Type: application/x-www-form-urlencoded\r\n            \r\n             grant_type=password\r\n             &amp",username=user@example.com\r\n             &amp,"password=xxxxx\r\n             ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,passwordEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,encodeRequestParameters,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetPasswordGrantOAuthToken (passwordEntryName, uri, headers, encodeRequestParameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetPasswordGrantOAuthToken (string passwordEntryName, string uri, IDictionary<string,string> headers, bool encodeRequestParameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,contentType,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,compressBody,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,credentialsStoreEntryName,string,Name of credentials store entry,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (credentialsStoreEntryName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string credentialsStoreEntryName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
AuthorizedRestClient,Scripting.IAuthorizedRestClient,"{""Title"":""interface Scripting.IAuthorizedRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using Authorization header built with credentials defined in Credentials Management\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with basic authentication using credentials defined in Credentials Management and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = {}\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = AuthorizedRestClient.Post('CredentialsFromStore', url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,SerializeToJson (obj),System.String,"{""Title"":""string SerializeToJson (Object obj)"",""Summary"":""\r\n            Deserializes the specified entity to JSON\r\n            ""}",TRUE,mscorlib,TRUE,obj,Object,Enitity for serialization,,,,
BusinessPartnerRepository,Scripting.IBusinessPartnerRepository,"{""Title"":""interface Scripting.IBusinessPartnerRepository"",""Summary"":""\r\n            Business partner repository. Used to retrieve data about business partners.\r\n            ""}",FALSE,Scripting,FALSE,GetByExternalId (externalId),Scripting.IBusinessPartner,"{""Title"":""IBusinessPartner GetByExternalId (string externalId)"",""Summary"":""\r\n            Gets list of business partners for the provided external ID.\r\n            ""}",FALSE,Scripting,TRUE,externalId,string,The external ID.,,,,
BusinessPartnerRepository,Scripting.IBusinessPartnerRepository,"{""Title"":""interface Scripting.IBusinessPartnerRepository"",""Summary"":""\r\n            Business partner repository. Used to retrieve data about business partners.\r\n            ""}",FALSE,Scripting,FALSE,GetById (id),Scripting.IBusinessPartner,"{""Title"":""IBusinessPartner GetById (int id)"",""Summary"":""\r\n            Gets business partner by identifier.\r\n            ""}",FALSE,Scripting,TRUE,id,int,The identifier.,,,,
BusinessPartnerRepository,Scripting.IBusinessPartnerRepository,"{""Title"":""interface Scripting.IBusinessPartnerRepository"",""Summary"":""\r\n            Business partner repository. Used to retrieve data about business partners.\r\n            ""}",FALSE,Scripting,FALSE,GetByName (name),"System.Collections.Generic.List`1[[Scripting.IBusinessPartner, Scripting, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cd82423e43a9441d]]","{""Title"":""List<IBusinessPartner> GetByName (string name)"",""Summary"":""\r\n            Gets list of business partners for the provided name.\r\n            ""}",FALSE,mscorlib,TRUE,name,string,Business partner name.,,,,
Convert,Scripting.IConvert,"{""Title"":""interface Scripting.IConvert"",""Summary"":""\r\n            Helper string conversion class.\r\n            ""}",FALSE,Scripting,FALSE,Base64Decode (base64EncodedData),System.String,"{""Title"":""string Base64Decode (string base64EncodedData)"",""Summary"":""\r\n            Converts the specified string, which encodes binary data as base-64 digits.\r\n            ""}",TRUE,mscorlib,TRUE,base64EncodedData,string,,,,,
Convert,Scripting.IConvert,"{""Title"":""interface Scripting.IConvert"",""Summary"":""\r\n            Helper string conversion class.\r\n            ""}",FALSE,Scripting,FALSE,Base64Encode (plainText),System.String,"{""Title"":""string Base64Encode (string plainText)"",""Summary"":""\r\n            Converts a string to its equivalent string representation that is encoded with base-64 digits.\r\n            ""}",TRUE,mscorlib,TRUE,plainText,string,,,,,
Convert,Scripting.IConvert,"{""Title"":""interface Scripting.IConvert"",""Summary"":""\r\n            Helper string conversion class.\r\n            ""}",FALSE,Scripting,FALSE,FromBase64String (plainText),System.Byte[],"{""Title"":""Byte[] FromBase64String (string plainText)"",""Summary"":""\r\n            Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.\r\n            ""}",FALSE,mscorlib,TRUE,plainText,string,The string to convert.,,,,
Convert,Scripting.IConvert,"{""Title"":""interface Scripting.IConvert"",""Summary"":""\r\n            Helper string conversion class.\r\n            ""}",FALSE,Scripting,FALSE,"GetBytes (plainText, encoding)",System.Byte[],"{""Title"":""Byte[] GetBytes (string plainText, Encodings encoding)"",""Summary"":""\r\n            Encodes all the characters in the specified string into a sequence of bytes.\r\n            ""}",FALSE,mscorlib,TRUE,plainText,string,The string containing the characters to encode.,,,,
Convert,Scripting.IConvert,"{""Title"":""interface Scripting.IConvert"",""Summary"":""\r\n            Helper string conversion class.\r\n            ""}",FALSE,Scripting,FALSE,"GetBytes (plainText, encoding)",System.Byte[],"{""Title"":""Byte[] GetBytes (string plainText, Encodings encoding)"",""Summary"":""\r\n            Encodes all the characters in the specified string into a sequence of bytes.\r\n            ""}",FALSE,mscorlib,TRUE,encoding,Encodings,Data encoding type.  for more information.,,,,
Convert,Scripting.IConvert,"{""Title"":""interface Scripting.IConvert"",""Summary"":""\r\n            Helper string conversion class.\r\n            ""}",FALSE,Scripting,FALSE,ToBase64String (bytes),System.String,"{""Title"":""string ToBase64String (Byte[] bytes)"",""Summary"":""\r\n            Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.\r\n            ""}",TRUE,mscorlib,TRUE,bytes,Byte[],An array of 8-bit unsigned integers.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, clientSecretEntryName, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,data,Byte[],Data to be decrypted.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, clientSecretEntryName, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,clientSecretEntryName,string,Client secret entry name containing a 256-bit key encrypted as Base64 string.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, clientSecretEntryName, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,initializationVector,Byte[],The 128-bit initialization vector to use for the symmetric algorithm.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, clientSecretEntryName, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,encoding,Encodings,Data encoding type.  for more information.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, key, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,data,Byte[],Data to be decrypted.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, key, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,key,Byte[],The 256-bit key to use for the symmetric algorithm.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, key, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,initializationVector,Byte[],The 128-bit initialization vector to use for the symmetric algorithm.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesDecrypt (data, key, initializationVector, encoding)",System.String,"{""Title"":""string AesDecrypt (Byte[] data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Decrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",TRUE,mscorlib,TRUE,encoding,Encodings,Data encoding type.  for more information.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, clientSecretEntryName, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,data,string,Data to be encrypted.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, clientSecretEntryName, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,clientSecretEntryName,string,Client secret entry name containing a 256-bit key encrypted as Base64 string.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, clientSecretEntryName, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,initializationVector,Byte[],The 128-bit initialization vector to use for the symmetric algorithm.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, clientSecretEntryName, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, string clientSecretEntryName, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,encoding,Encodings,Data encoding type.  for more information.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, key, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,data,string,Data to be encrypted.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, key, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,key,Byte[],The 256-bit key to use for the symmetric algorithm.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, key, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,initializationVector,Byte[],The 128-bit initialization vector to use for the symmetric algorithm.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"AesEncrypt (data, key, initializationVector, encoding)",System.Byte[],"{""Title"":""Byte[] AesEncrypt (string data, Byte[] key, Byte[] initializationVector, Encodings encoding)"",""Summary"":""\r\n            Encrypts data according to the Advanced Encryption Standard (AES).\r\n            ""}",FALSE,mscorlib,TRUE,encoding,Encodings,Data encoding type.  for more information.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"ComputeHashUsingHMAC (data, clientSecretEntryName, hashFunction)",System.Byte[],"{""Title"":""Byte[] ComputeHashUsingHMAC (Byte[] data, string clientSecretEntryName, HMACHashFunction hashFunction)"",""Summary"":""\r\n            Computes the HMAC (Hash-based Message Authentication Code) of the given data using the specified hash function and key.\r\n            ""}",FALSE,mscorlib,TRUE,data,Byte[],"The input data to be hashed, provided as a byte array.",,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"ComputeHashUsingHMAC (data, clientSecretEntryName, hashFunction)",System.Byte[],"{""Title"":""Byte[] ComputeHashUsingHMAC (Byte[] data, string clientSecretEntryName, HMACHashFunction hashFunction)"",""Summary"":""\r\n            Computes the HMAC (Hash-based Message Authentication Code) of the given data using the specified hash function and key.\r\n            ""}",FALSE,mscorlib,TRUE,clientSecretEntryName,string,Client secret entry name containing a key encrypted as Base64 string.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,"ComputeHashUsingHMAC (data, clientSecretEntryName, hashFunction)",System.Byte[],"{""Title"":""Byte[] ComputeHashUsingHMAC (Byte[] data, string clientSecretEntryName, HMACHashFunction hashFunction)"",""Summary"":""\r\n            Computes the HMAC (Hash-based Message Authentication Code) of the given data using the specified hash function and key.\r\n            ""}",FALSE,mscorlib,TRUE,hashFunction,HMACHashFunction,"The HMAC hash function to be used, specified from the  enumeration.",,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,GenerateRandomBytes (numberOfBytes),System.Byte[],"{""Title"":""Byte[] GenerateRandomBytes (int numberOfBytes)"",""Summary"":""\r\n            Generates a byte array of specified length filled with cryptographically secure random bytes.\r\n            ""}",FALSE,mscorlib,TRUE,numberOfBytes,int,The number of random bytes to generate. Must be greater than zero.,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,GetAesInitializationVector (),System.Byte[],"{""Title"":""Byte[] GetAesInitializationVector ()"",""Summary"":""\r\n            Gets 128-bit AES initialization vector.\r\n            ""}",FALSE,mscorlib,TRUE,null,null,null,,,,
Cryptography,Scripting.ICryptography,"{""Title"":""interface Scripting.ICryptography"",""Summary"":""\r\n            Utility methods related to cryptography.\r\n            ""}",FALSE,Scripting,FALSE,GetAesKey (),System.Byte[],"{""Title"":""Byte[] GetAesKey ()"",""Summary"":""\r\n            Gets 256-bit AES key.\r\n            ""}",FALSE,mscorlib,TRUE,null,null,null,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,AllowAttr (attributeName),System.Void,"{""Title"":""void AllowAttr (string attributeName)"",""Summary"":""\r\n            Allows attribute.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Allowed = true.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"AllowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void AllowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Allows attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"AllowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void AllowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Allows attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,Attr (attributeName),Scripting.IProductAttribute,"{""Title"":""IProductAttribute Attr (string attributeName)"",""Summary"":""\r\n            Gets the attribute in current product by attribute name.\r\n            Same as <c>Product.Attributes.GetByName(attributeName)</c>""}",FALSE,Scripting,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"AttrValue (attributeName, valueCode)",Scripting.IProductAttributeValue,"{""Title"":""IProductAttributeValue AttrValue (string attributeName, string valueCode)"",""Summary"":""\r\n            Gets the attribute value in current product by attribute name and value code.\r\n            ""}",FALSE,Scripting,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"AttrValue (attributeName, valueCode)",Scripting.IProductAttributeValue,"{""Title"":""IProductAttributeValue AttrValue (string attributeName, string valueCode)"",""Summary"":""\r\n            Gets the attribute value in current product by attribute name and value code.\r\n            ""}",FALSE,Scripting,TRUE,valueCode,string,The value code.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"DeselectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DeselectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Deselects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"DeselectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DeselectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Deselects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,DisallowAttr (attributeName),System.Void,"{""Title"":""void DisallowAttr (string attributeName)"",""Summary"":""\r\n            Disallows the attribute.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Allowed = false.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"DisallowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DisallowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Disallows attribute values.\r\n            Note that disallow also deselect attribute value.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"DisallowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DisallowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Disallows attribute values.\r\n            Note that disallow also deselect attribute value.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,ResetAttr (attributeName),System.Void,"{""Title"":""void ResetAttr (string attributeName)"",""Summary"":""\r\n            Resets the attribute.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"SelectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void SelectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Selects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"SelectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void SelectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Selects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,SetOptional (attributeName),System.Void,"{""Title"":""void SetOptional (string attributeName)"",""Summary"":""\r\n            Sets attribute as optional.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Required = false.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"SetQty (attributeName, qty)",System.Void,"{""Title"":""void SetQty (string attributeName, int qty)"",""Summary"":""\r\n            Sets attribute quantity.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Quantity = qty.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,"SetQty (attributeName, qty)",System.Void,"{""Title"":""void SetQty (string attributeName, int qty)"",""Summary"":""\r\n            Sets attribute quantity.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Quantity = qty.</c>""}",TRUE,mscorlib,TRUE,qty,int,Attribute quantity.,,,,
F,Scripting.IAliases,"{""Title"":""interface Scripting.IAliases"",""Summary"":""\r\n            Alias functions.\r\n            ""}",FALSE,Scripting,FALSE,SetRequired (attributeName),System.Void,"{""Title"":""void SetRequired (string attributeName)"",""Summary"":""\r\n            Sets attribute as required.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Required = true.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
FederationUtility,Scripting.IFederationUtility,"{""Title"":""interface Scripting.IFederationUtility"",""Summary"":""\r\n            Federation helper methods\r\n            ""}",FALSE,Scripting,FALSE,FederationUserName,System.String,"{""Title"":""string FederationUserName"",""Summary"":""\r\n            Gets federation username if user is logged to federation environment\r\n            Otherwise returns null\r\n            <example><h3>Getting federation username through Scripting</h3><code language=\""python\"">\r\n            federationUserName = FederationUtility.FederationUserName","\r\n            </code></example>""}",TRUE,mscorlib,FALSE,null,null,null,,,
FederationUtility,Scripting.IFederationUtility,"{""Title"":""interface Scripting.IFederationUtility"",""Summary"":""\r\n            Federation helper methods\r\n            ""}",FALSE,Scripting,FALSE,GetFederationUrlSegment (identityProviderName),System.String,"{""Title"":""string GetFederationUrlSegment (string identityProviderName)"",""Summary"":""\r\n            Gets federation URL segment specific for provided identity provider name\r\n            <example><h3>Getting federation url segment for specific identity provider through Scripting</h3><code language=\""python\"">\r\n            idpName = 'http://adfstest.webcomcpq.com/adfs/services/trust'",\r\n            urlSegment  = FederationUtility.GetFederationUrlSegment(idpName),"\r\n            </code></example>""}",TRUE,mscorlib,TRUE,identityProviderName,string,Name of the identity provider to get for url segment,,
FileHelper,Scripting.IFileHelper,"{""Title"":""interface Scripting.IFileHelper"",""Summary"":""\r\n            File helper\r\n            ""}",FALSE,Scripting,FALSE,GetStreamFromBytes (bytes),System.IO.Stream,"{""Title"":""Stream GetStreamFromBytes (Byte[] bytes)"",""Summary"":""\r\n            Gets the stream from bytes.\r\n            ""}",FALSE,mscorlib,TRUE,bytes,Byte[],The bytes.,,,,
FileHelper,Scripting.IFileHelper,"{""Title"":""interface Scripting.IFileHelper"",""Summary"":""\r\n            File helper\r\n            ""}",FALSE,Scripting,FALSE,GetStreamFromPath (path),System.IO.Stream,"{""Title"":""Stream GetStreamFromPath (string path)"",""Summary"":""\r\n            Gets the stream from path.\r\n            ""}",FALSE,mscorlib,TRUE,path,string,The relative path in tenant folder.,,,,
FileHelper,Scripting.IFileHelper,"{""Title"":""interface Scripting.IFileHelper"",""Summary"":""\r\n            File helper\r\n            ""}",FALSE,Scripting,FALSE,LoadBinaryFile (path),System.Byte[],"{""Title"":""Byte[] LoadBinaryFile (string path)"",""Summary"":""\r\n            Loads the binary file.\r\n            ""}",FALSE,mscorlib,TRUE,path,string,The relative path in tenant folder.,,,,
FileHelper,Scripting.IFileHelper,"{""Title"":""interface Scripting.IFileHelper"",""Summary"":""\r\n            File helper\r\n            ""}",FALSE,Scripting,FALSE,LoadTextFile (path),System.String,"{""Title"":""string LoadTextFile (string path)"",""Summary"":""\r\n            Loads the text file.\r\n            ""}",TRUE,mscorlib,TRUE,path,string,The relative path in tenant folder.,,,,
FileHelper,Scripting.IFileHelper,"{""Title"":""interface Scripting.IFileHelper"",""Summary"":""\r\n            File helper\r\n            ""}",FALSE,Scripting,FALSE,"Save (path, stream)",System.Void,"{""Title"":""void Save (string path, Stream stream)"",""Summary"":""\r\n            Saves the specified stream to file.\r\n            ""}",TRUE,mscorlib,TRUE,path,string,The relative path in tenant folder.,,,,
FileHelper,Scripting.IFileHelper,"{""Title"":""interface Scripting.IFileHelper"",""Summary"":""\r\n            File helper\r\n            ""}",FALSE,Scripting,FALSE,"Save (path, stream)",System.Void,"{""Title"":""void Save (string path, Stream stream)"",""Summary"":""\r\n            Saves the specified stream to file.\r\n            ""}",TRUE,mscorlib,TRUE,stream,Stream,The stream to be saved.,,,,
HttpUtility,Scripting.IHttpUtility,"{""Title"":""interface Scripting.IHttpUtility"",""Summary"":""\r\n            Provides methods for encoding and decoding URLs when processing Web requests.\r\n            ""}",FALSE,Scripting,FALSE,HtmlDecode (value),System.String,"{""Title"":""string HtmlDecode (string value)"",""Summary"":""\r\n            Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.\r\n            ""}",TRUE,mscorlib,TRUE,value,string,The string to decode. ,,,,
HttpUtility,Scripting.IHttpUtility,"{""Title"":""interface Scripting.IHttpUtility"",""Summary"":""\r\n            Provides methods for encoding and decoding URLs when processing Web requests.\r\n            ""}",FALSE,Scripting,FALSE,HtmlEncode (value),System.String,"{""Title"":""string HtmlEncode (Object value)"",""Summary"":""\r\n            Converts an object's string representation into an HTML-encoded string, and returns the encoded string.\r\n            ""}",TRUE,mscorlib,TRUE,value,Object,An object.,,,,
HttpUtility,Scripting.IHttpUtility,"{""Title"":""interface Scripting.IHttpUtility"",""Summary"":""\r\n            Provides methods for encoding and decoding URLs when processing Web requests.\r\n            ""}",FALSE,Scripting,FALSE,ParseQueryString (query),System.Collections.Specialized.NameValueCollection,"{""Title"":""NameValueCollection ParseQueryString (string query)"",""Summary"":""\r\n            Parses a query string into a <see cref=\""T:System.Collections.Specialized.NameValueCollection\"" /> using <see cref=\""P:System.Text.Encoding.UTF8\"" /> encoding.\r\n            ""}",FALSE,System,TRUE,query,string,The query string to parse.,,,,
HttpUtility,Scripting.IHttpUtility,"{""Title"":""interface Scripting.IHttpUtility"",""Summary"":""\r\n            Provides methods for encoding and decoding URLs when processing Web requests.\r\n            ""}",FALSE,Scripting,FALSE,UrlDecode (url),System.String,"{""Title"":""string UrlDecode (string url)"",""Summary"":""\r\n            Converts a string that has been encoded for transmission in a URL into a decoded string.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The string to decode. ,,,,
HttpUtility,Scripting.IHttpUtility,"{""Title"":""interface Scripting.IHttpUtility"",""Summary"":""\r\n            Provides methods for encoding and decoding URLs when processing Web requests.\r\n            ""}",FALSE,Scripting,FALSE,UrlEncode (url),System.String,"{""Title"":""string UrlEncode (string url)"",""Summary"":""\r\n            Encodes a URL string.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The text to encode. ,,,,
HttpWebClientProtocol,Scripting.IHttpWebClientProtocol,"{""Title"":""interface Scripting.IHttpWebClientProtocol"",""Summary"":""\r\n            HttpWebClientProtocol\r\n            ""}",FALSE,Scripting,FALSE,GetWebRequest (uri),System.Net.WebRequest,"{""Title"":""WebRequest GetWebRequest (Uri uri)"",""Summary"":""\r\n            GetWebRequest\r\n            ""}",FALSE,System,TRUE,uri,Uri,Uniform Resource Identifier,,,,
Items,Scripting.IRequestItems,"{""Title"":""interface Scripting.IRequestItems"",""Summary"":""\r\n            Represents the key value collection that has a life cycle of one HTTP request\r\n            ""}",FALSE,Scripting,FALSE,Item,System.Object,"{""Title"":""Object this[string key]"",""Summary"":""\r\n            Gets or sets the objects <see cref=\""T:System.Object\"" /> with the specified key.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
JsonHelper,Scripting.IJsonHelper,"{""Title"":""interface Scripting.IJsonHelper"",""Summary"":""\r\n            Represents an object with which we can serialize/deserialize JSON data.\r\n            ""}",FALSE,Scripting,FALSE,Deserialize (value),System.Object,"{""Title"":""Object Deserialize (string value)"",""Summary"":""\r\n            Deserializes the JSON to an object.\r\n            <example><h3>Deserialize python dictionary:</h3><code language=\""python\"">\r\n            s = '{\""a\"": \""b\""}'<br />\r\n            d = JsonHelper.Deserialize(s)<br />\r\n            for key, value in d.items(): Trace.Write(key + ': ' + str(value))<br /></code></example><example><br /><h3>Deserialize python list:</h3><code language=\""python\"">\r\n            s = '[1, 2, 3.14]'<br />\r\n            numbers = JsonHelper.Deserialize(s)<br />\r\n            for number in numbers: Trace.Write(str(number))<br /></code></example>""}",TRUE,mscorlib,TRUE,value,string,The JSON to deserialize.,,,,
JsonHelper,Scripting.IJsonHelper,"{""Title"":""interface Scripting.IJsonHelper"",""Summary"":""\r\n            Represents an object with which we can serialize/deserialize JSON data.\r\n            ""}",FALSE,Scripting,FALSE,Serialize (value),System.String,"{""Title"":""string Serialize (Object value)"",""Summary"":""\r\n            Serializes the specified object to a JSON string.\r\n            <example><br /><h3>Serialize:</h3><code language=\""python\"">\r\n            d = {\""a\"": True}<br />\r\n            s = JsonHelper.Serialize(d)<br />\r\n            Trace.Write(s)<br /></code></example>""}",TRUE,mscorlib,TRUE,value,Object,The object to serialize.,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameters (claims, signingKeyEntryName, expiresInSeconds)",Scripting.Jwt.IJwtTokenParameters,"{""Title"":""IJwtTokenParameters CreateParameters (IDictionary<string,string> claims, string signingKeyEntryName, Double expiresInSeconds)"",""Summary"":""""}",FALSE,Scripting,TRUE,claims,"IDictionary<string,string>",,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameters (claims, signingKeyEntryName, expiresInSeconds)",Scripting.Jwt.IJwtTokenParameters,"{""Title"":""IJwtTokenParameters CreateParameters (IDictionary<string,string> claims, string signingKeyEntryName, Double expiresInSeconds)"",""Summary"":""""}",FALSE,Scripting,TRUE,signingKeyEntryName,string,,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameters (claims, signingKeyEntryName, expiresInSeconds)",Scripting.Jwt.IJwtTokenParameters,"{""Title"":""IJwtTokenParameters CreateParameters (IDictionary<string,string> claims, string signingKeyEntryName, Double expiresInSeconds)"",""Summary"":""""}",FALSE,Scripting,TRUE,expiresInSeconds,Double,,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameters (claims, signingKeyEntryName, expiresInSeconds, signingKeyType)",Scripting.Jwt.IJwtTokenParameters,"{""Title"":""IJwtTokenParameters CreateParameters (IDictionary<string,string> claims, string signingKeyEntryName, Double expiresInSeconds, JwtTokenKeyType signingKeyType)"",""Summary"":""""}",FALSE,Scripting,TRUE,claims,"IDictionary<string,string>",,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameters (claims, signingKeyEntryName, expiresInSeconds, signingKeyType)",Scripting.Jwt.IJwtTokenParameters,"{""Title"":""IJwtTokenParameters CreateParameters (IDictionary<string,string> claims, string signingKeyEntryName, Double expiresInSeconds, JwtTokenKeyType signingKeyType)"",""Summary"":""""}",FALSE,Scripting,TRUE,signingKeyEntryName,string,,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameters (claims, signingKeyEntryName, expiresInSeconds, signingKeyType)",Scripting.Jwt.IJwtTokenParameters,"{""Title"":""IJwtTokenParameters CreateParameters (IDictionary<string,string> claims, string signingKeyEntryName, Double expiresInSeconds, JwtTokenKeyType signingKeyType)"",""Summary"":""""}",FALSE,Scripting,TRUE,expiresInSeconds,Double,,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameters (claims, signingKeyEntryName, expiresInSeconds, signingKeyType)",Scripting.Jwt.IJwtTokenParameters,"{""Title"":""IJwtTokenParameters CreateParameters (IDictionary<string,string> claims, string signingKeyEntryName, Double expiresInSeconds, JwtTokenKeyType signingKeyType)"",""Summary"":""""}",FALSE,Scripting,TRUE,signingKeyType,JwtTokenKeyType,,,,,
JwtTokenProvider,Scripting.Jwt.IJwtTokenProvider,"{""Title"":""interface Scripting.Jwt.IJwtTokenProvider"",""Summary"":""\r\n            Provider used for generating JWT tokens with provided parameters which is signed with symmetric/asymmetric key.\r\n            If signingKeyType is Symmetric or Asymmetric, will look at Credential Management for the signingKeyEntryName.\r\n            If signingKeyType is AsymmetricWithCertificate, will look at Certificate Management for the signingKeyEntryName.\r\n            <example><code language=\""python\"">\r\n            claims = { \""Username\"": \""myCpqUser\"", \""Domain\"": \""myCpqDomain\""}\r\n            tokenParameters = JwtTokenProvider.CreateParameters(claims, \""test_cpq_secret\"", 300)\r\n            token = JwtTokenProvider.Generate(tokenParameters)\r\n            \r\n            headers = {\r\n                       \""Authorization\"": \""Bearer \"" + token\r\n            }\r\n            \r\n            response = RestClient.Get(\""https://{myCPQInstallation}/customapi/executescript?scriptName=myAPIScript\"", headers)\r\n            </code></example>""}",FALSE,Scripting,FALSE,Generate (parameters),System.String,"{""Title"":""string Generate (IJwtTokenParameters parameters)"",""Summary"":""\r\n            Generates Jwt token from provided parameters.\r\n            ""}",TRUE,mscorlib,TRUE,parameters,IJwtTokenParameters,Jwt token generation parameters,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,Error (message),System.Void,"{""Title"":""void Error (string message)"",""Summary"":""\r\n            Writes the specified error to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Error (title, message)",System.Void,"{""Title"":""void Error (string title, string message)"",""Summary"":""\r\n            Writes the specified error to log.\r\n            ""}",TRUE,mscorlib,TRUE,title,string,The title.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Error (title, message)",System.Void,"{""Title"":""void Error (string title, string message)"",""Summary"":""\r\n            Writes the specified error to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Error (title, message, exception)",System.Void,"{""Title"":""void Error (string title, string message, Object exception)"",""Summary"":""\r\n            Writes the specified error to log.\r\n            ""}",TRUE,mscorlib,TRUE,title,string,The title.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Error (title, message, exception)",System.Void,"{""Title"":""void Error (string title, string message, Object exception)"",""Summary"":""\r\n            Writes the specified error to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Error (title, message, exception)",System.Void,"{""Title"":""void Error (string title, string message, Object exception)"",""Summary"":""\r\n            Writes the specified error to log.\r\n            ""}",TRUE,mscorlib,TRUE,exception,Object,IronPython exception object.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,Info (message),System.Void,"{""Title"":""void Info (string message)"",""Summary"":""\r\n            Writes the specified info to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Info (title, message)",System.Void,"{""Title"":""void Info (string title, string message)"",""Summary"":""\r\n            Writes the specified info to log.\r\n            ""}",TRUE,mscorlib,TRUE,title,string,The title.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Info (title, message)",System.Void,"{""Title"":""void Info (string title, string message)"",""Summary"":""\r\n            Writes the specified info to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,Warning (message),System.Void,"{""Title"":""void Warning (string message)"",""Summary"":""\r\n            Writes the specified warning to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Warning (title, message)",System.Void,"{""Title"":""void Warning (string title, string message)"",""Summary"":""\r\n            Writes the specified warning to log.\r\n            ""}",TRUE,mscorlib,TRUE,title,string,The title.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Warning (title, message)",System.Void,"{""Title"":""void Warning (string title, string message)"",""Summary"":""\r\n            Writes the specified warning to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,Write (message),System.Void,"{""Title"":""void Write (string message)"",""Summary"":""\r\n            Writes the specified message to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Write (title, message)",System.Void,"{""Title"":""void Write (string title, string message)"",""Summary"":""\r\n            Writes the specified message to log.\r\n            ""}",TRUE,mscorlib,TRUE,title,string,The title.,,,,
Log,Scripting.ILog,"{""Title"":""interface Scripting.ILog"",""Summary"":""\r\n            ILog class write messages to log \r\n            ""}",FALSE,Scripting,FALSE,"Write (title, message)",System.Void,"{""Title"":""void Write (string title, string message)"",""Summary"":""\r\n            Writes the specified message to log.\r\n            ""}",TRUE,mscorlib,TRUE,message,string,The message.,,,,
PartnerFunctionRepository,Scripting.IPartnerFunctionRepository,"{""Title"":""interface Scripting.IPartnerFunctionRepository"",""Summary"":""\r\n            Partner function repository. Used to retrieve data about partner functions.\r\n            ""}",FALSE,Scripting,FALSE,GetAll (),"System.Collections.Generic.List`1[[Scripting.IPartnerFunction, Scripting, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cd82423e43a9441d]]","{""Title"":""List<IPartnerFunction> GetAll ()"",""Summary"":""\r\n            Gets all partner functions.\r\n            ""}",FALSE,mscorlib,TRUE,null,null,null,,,,
PartnerFunctionRepository,Scripting.IPartnerFunctionRepository,"{""Title"":""interface Scripting.IPartnerFunctionRepository"",""Summary"":""\r\n            Partner function repository. Used to retrieve data about partner functions.\r\n            ""}",FALSE,Scripting,FALSE,GetByKey (partnerFunctionKey),Scripting.IPartnerFunction,"{""Title"":""IPartnerFunction GetByKey (string partnerFunctionKey)"",""Summary"":""\r\n            Gets partner function by key.\r\n            ""}",FALSE,Scripting,TRUE,partnerFunctionKey,string,,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,AddToQuote (quantity),System.String,"{""Title"":""string AddToQuote (int quantity)"",""Summary"":""\r\n            Inserts new inline product configuration to the quote.\r\n            ""}",TRUE,mscorlib,TRUE,quantity,int,"Specifies the quantity of added products.
\n            If it is not defined, default quantity is 1.",,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,AllowAttr (attributeName),System.Void,"{""Title"":""void AllowAttr (string attributeName)"",""Summary"":""\r\n            Allows attribute.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Allowed = true.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"AllowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void AllowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Allows attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"AllowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void AllowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Allows attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ApplyRules (),System.Void,"{""Title"":""void ApplyRules ()"",""Summary"":""\r\n            Applies the rules on current product.\r\n            Rules will not be applied if it is called from IronPython script which has been executed via tag \""&lt",*ExecuteScript(ScriptName)*&gt,"\""\r\n            <br />\r\n            It will not raise OnProductRuleExecutionStart/OnProductRuleExecutionEnd events.\r\n            <br />\r\n            Note that this method does not set Allowed property of product attributes to true before the rule is executed.\r\n            <br />\r\n            Before calling this method, Allowed property should be updated by iterating through product attributes and setting it to true.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Attr (attributeName),Scripting.IProductAttribute,"{""Title"":""IProductAttribute Attr (string attributeName)"",""Summary"":""\r\n            Gets the attribute in current product by attribute name.\r\n            Same as <c>Product.Attributes.GetByName(attributeName)</c>""}",FALSE,Scripting,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"AttrValue (attributeName, valueCode)",Scripting.IProductAttributeValue,"{""Title"":""IProductAttributeValue AttrValue (string attributeName, string valueCode)"",""Summary"":""\r\n            Gets the attribute value in current product by attribute name and value code.\r\n            ""}",FALSE,Scripting,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"AttrValue (attributeName, valueCode)",Scripting.IProductAttributeValue,"{""Title"":""IProductAttributeValue AttrValue (string attributeName, string valueCode)"",""Summary"":""\r\n            Gets the attribute value in current product by attribute name and value code.\r\n            ""}",FALSE,Scripting,TRUE,valueCode,string,The value code.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Attributes,Scripting.IProductAttributeCollection,"{""Title"":""IProductAttributeCollection Attributes"",""Summary"":""\r\n            Gets product attributes\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,CalculateLineItemsInResponder,System.Boolean,"{""Title"":""bool CalculateLineItemsInResponder"",""Summary"":""\r\n            Gets or sets a value indicating whether line items should be calculated in responder for this product. This setting would override application parameter which controls this behavior (Skip Responder Parsing) but only for current product.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ChangeTab (tabName),System.Void,"{""Title"":""void ChangeTab (string tabName)"",""Summary"":""\r\n            Changes tab to the tab with name specified.\r\n            ""}",TRUE,mscorlib,TRUE,tabName,string,Name of the tab.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,CostFormula,System.String,"{""Title"":""string CostFormula"",""Summary"":""\r\n            Gets or sets product cost formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,DescriptionFormula,System.String,"{""Title"":""string DescriptionFormula"",""Summary"":""\r\n            Gets or sets product description formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"DeselectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DeselectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Deselects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"DeselectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DeselectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Deselects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,DisallowAttr (attributeName),System.Void,"{""Title"":""void DisallowAttr (string attributeName)"",""Summary"":""\r\n            Disallows the attribute.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Allowed = false.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"DisallowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DisallowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Disallows attribute values.\r\n            Note that disallow also deselect attribute value.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"DisallowAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void DisallowAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Disallows attribute values.\r\n            Note that disallow also deselect attribute value.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ErrorMessages,Scripting.IProductErrorMessages,"{""Title"":""IProductErrorMessages ErrorMessages"",""Summary"":""\r\n            Gets the product error messages. Messages are shown in the responder part of the configurator as errors.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ExecuteRulesOnce,System.Boolean,"{""Title"":""bool ExecuteRulesOnce"",""Summary"":""\r\n            Gets or sets a value indicating whether product rules will execute once.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ExternalConfiguration,System.String,"{""Title"":""string ExternalConfiguration"",""Summary"":""\r\n            External configuration content stored in CPQ database.\r\n            It will be populated only for products on Quote 2.0 that have Variant configuration type.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ExternalId,System.String,"{""Title"":""string ExternalId"",""Summary"":""\r\n            Gets the external product id.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,FailedValidations,Scripting.IProductValidationMessageCollection,"{""Title"":""IProductValidationMessageCollection FailedValidations"",""Summary"":""\r\n            Gets the list of failed validations.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,FamilyCode,System.String,"{""Title"":""string FamilyCode"",""Summary"":""\r\n            Gets or sets the family code.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetContainerByName (attributeName),Scripting.IContainer,"{""Title"":""IContainer GetContainerByName (string attributeName)"",""Summary"":""\r\n            Gets the container by container attribute name.\r\n            ""}",FALSE,Scripting,TRUE,attributeName,string,The container attribute name.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetContainerBySystemId (attributeSytemId),Scripting.IContainer,"{""Title"":""IContainer GetContainerBySystemId (string attributeSytemId)"",""Summary"":""\r\n            Gets the container by container attribute system id.\r\n            ""}",FALSE,Scripting,TRUE,attributeSytemId,string,The container attribute system id.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetDescription (),System.String,"{""Title"":""string GetDescription ()"",""Summary"":""\r\n            Gets parsed product description.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetGlobal (name),System.String,"{""Title"":""string GetGlobal (string name)"",""Summary"":""\r\n            Gets the value by global name.\r\n            ""}",TRUE,mscorlib,TRUE,name,string,Global name.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetLabel (),System.String,"{""Title"":""string GetLabel ()"",""Summary"":""\r\n            Gets parsed product label.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetLongDescription (),System.String,"{""Title"":""string GetLongDescription ()"",""Summary"":""\r\n            Gets parsed product long description.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetMrcTotalPrice (),System.Decimal,"{""Title"":""decimal GetMrcTotalPrice ()"",""Summary"":""\r\n            Gets parsed monthly recurring (mrc) total price.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,GetQuoteDescription (),System.String,"{""Title"":""string GetQuoteDescription ()"",""Summary"":""\r\n            Gets parsed quote description.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Id,System.Int32,"{""Title"":""int Id"",""Summary"":""\r\n            Gets the id.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Image,System.String,"{""Title"":""string Image"",""Summary"":""\r\n            Gets or sets the image name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ImageLarge,System.String,"{""Title"":""string ImageLarge"",""Summary"":""\r\n            Gets or sets the large image name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Inventory,"System.Nullable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]","{""Title"":""Nullable<int> Inventory"",""Summary"":""\r\n            Gets or sets the inventory.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,IsComplete,System.Boolean,"{""Title"":""bool IsComplete"",""Summary"":""\r\n            Gets a value indicating whether the product is complete.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,IsSimple,System.Boolean,"{""Title"":""bool IsSimple"",""Summary"":""\r\n            Gets a value indicating whether the product is simple.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,IsTabVisible (tabName),System.Boolean,"{""Title"":""bool IsTabVisible (string tabName)"",""Summary"":""\r\n            Checks if tab is visible.\r\n            ""}",TRUE,mscorlib,TRUE,tabName,string,Name of the tab.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,LabelFormula,System.String,"{""Title"":""string LabelFormula"",""Summary"":""\r\n            Gets or sets the label formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,LeadTime,System.String,"{""Title"":""string LeadTime"",""Summary"":""\r\n            Gets or sets the lead time.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Link,System.String,"{""Title"":""string Link"",""Summary"":""\r\n            Gets or sets the link.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"LoadExternalProductFromVariantConfiguration (variantConfigurationJson, externalConfiguration)",System.Void,"{""Title"":""void LoadExternalProductFromVariantConfiguration (string variantConfigurationJson, string externalConfiguration)"",""Summary"":""\r\n            Loading configuration into a product that is already configured.\r\n            ""}",TRUE,mscorlib,TRUE,variantConfigurationJson,string,Variant Configuration JSON payload in the external format of a Configuration.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"LoadExternalProductFromVariantConfiguration (variantConfigurationJson, externalConfiguration)",System.Void,"{""Title"":""void LoadExternalProductFromVariantConfiguration (string variantConfigurationJson, string externalConfiguration)"",""Summary"":""\r\n            Loading configuration into a product that is already configured.\r\n            ""}",TRUE,mscorlib,TRUE,externalConfiguration,string,External configuration.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"LoadVariantProductFromVariantConfiguration (variantConfigurationJson, configurationId)",System.Void,"{""Title"":""void LoadVariantProductFromVariantConfiguration (string variantConfigurationJson, string configurationId)"",""Summary"":""\r\n            Loading configuration into a product that is already configured.\r\n            ""}",TRUE,mscorlib,TRUE,variantConfigurationJson,string,Variant Configuration JSON payload in the external format of a Configuration.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"LoadVariantProductFromVariantConfiguration (variantConfigurationJson, configurationId)",System.Void,"{""Title"":""void LoadVariantProductFromVariantConfiguration (string variantConfigurationJson, string configurationId)"",""Summary"":""\r\n            Loading configuration into a product that is already configured.\r\n            ""}",TRUE,mscorlib,TRUE,configurationId,string,Variant Configuration Identifier.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,LongDescriptionFormula,System.String,"{""Title"":""string LongDescriptionFormula"",""Summary"":""\r\n            Gets or sets the long description formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ManufacturedPartNumber,System.String,"{""Title"":""string ManufacturedPartNumber"",""Summary"":""\r\n            Gets or sets the manufactured part number.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Messages,Scripting.IProductMessages,"{""Title"":""IProductMessages Messages"",""Summary"":""\r\n            Gets product configuration template messages\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,MrcCostFormula,System.String,"{""Title"":""string MrcCostFormula"",""Summary"":""\r\n            Gets or sets the monthly recurring cost formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,MrcPriceFormula,System.String,"{""Title"":""string MrcPriceFormula"",""Summary"":""\r\n            Gets or sets the monthly recurring price formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Name,System.String,"{""Title"":""string Name"",""Summary"":""\r\n            Gets or sets the product name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ParseString (expression),System.String,"{""Title"":""string ParseString (string expression)"",""Summary"":""\r\n            Parses the string.\r\n            ""}",TRUE,mscorlib,TRUE,expression,string,The expression.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,PartNumber,System.String,"{""Title"":""string PartNumber"",""Summary"":""\r\n            Gets product part number.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,PartNumberFormula,System.String,"{""Title"":""string PartNumberFormula"",""Summary"":""\r\n            Gets or sets product part number formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,PriceFormula,System.String,"{""Title"":""string PriceFormula"",""Summary"":""\r\n            Gets or sets the product price formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,PricingCode,System.String,"{""Title"":""string PricingCode"",""Summary"":""\r\n            Gets or sets the product pricing code.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ProductVersion,System.String,"{""Title"":""string ProductVersion"",""Summary"":""\r\n            Gets the product version.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ProductVersionName,System.String,"{""Title"":""string ProductVersionName"",""Summary"":""\r\n            Gets the product version name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,QuoteItemDescriptionFormula,System.String,"{""Title"":""string QuoteItemDescriptionFormula"",""Summary"":""\r\n            Gets or sets the quote item description formula.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,RecurringCostPeriod,System.String,"{""Title"":""string RecurringCostPeriod"",""Summary"":""\r\n            Gets or sets the recurring cost period.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,RecurringPricePeriod,System.String,"{""Title"":""string RecurringPricePeriod"",""Summary"":""\r\n            Gets or sets the recurring price period.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,ResetAttr (attributeName),System.Void,"{""Title"":""void ResetAttr (string attributeName)"",""Summary"":""\r\n            Resets the attribute.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"SelectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void SelectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Selects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"SelectAttrValues (attributeName, valueCodes)",System.Void,"{""Title"":""void SelectAttrValues (string attributeName, String[] valueCodes)"",""Summary"":""\r\n            Selects attribute values.\r\n            ""}",TRUE,mscorlib,TRUE,valueCodes,String[],The value codes.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"SetGlobal (name, value)",System.Void,"{""Title"":""void SetGlobal (string name, string value)"",""Summary"":""\r\n            Sets the value by global name.\r\n            ""}",TRUE,mscorlib,TRUE,name,string,Global name.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"SetGlobal (name, value)",System.Void,"{""Title"":""void SetGlobal (string name, string value)"",""Summary"":""\r\n            Sets the value by global name.\r\n            ""}",TRUE,mscorlib,TRUE,value,string,Global value.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,SetOptional (attributeName),System.Void,"{""Title"":""void SetOptional (string attributeName)"",""Summary"":""\r\n            Sets attribute as optional.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Required = false.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"SetQty (attributeName, qty)",System.Void,"{""Title"":""void SetQty (string attributeName, int qty)"",""Summary"":""\r\n            Sets attribute quantity.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Quantity = qty.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,"SetQty (attributeName, qty)",System.Void,"{""Title"":""void SetQty (string attributeName, int qty)"",""Summary"":""\r\n            Sets attribute quantity.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Quantity = qty.</c>""}",TRUE,mscorlib,TRUE,qty,int,Attribute quantity.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,SetRequired (attributeName),System.Void,"{""Title"":""void SetRequired (string attributeName)"",""Summary"":""\r\n            Sets attribute as required.\r\n            Same as <c>Product.Attributes.GetByName(attributeName).Required = true.</c>""}",TRUE,mscorlib,TRUE,attributeName,string,Name of the attribute.,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,SystemId,System.String,"{""Title"":""string SystemId"",""Summary"":""\r\n            Gets the system id.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Tabs,Scripting.IProductTabCollection,"{""Title"":""IProductTabCollection Tabs"",""Summary"":""\r\n            Gets a list of product tabs for the product\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,TotalPrice,System.Decimal,"{""Title"":""decimal TotalPrice"",""Summary"":""\r\n            Gets the total price.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Type,Scripting.IProductType,"{""Title"":""IProductType Type"",""Summary"":""\r\n            Gets product type of the product\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,UnitOfMeasure,System.String,"{""Title"":""string UnitOfMeasure"",""Summary"":""\r\n            Gets or sets the unit of measure for product.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,UniversalProductCode,System.String,"{""Title"":""string UniversalProductCode"",""Summary"":""\r\n            Gets or sets the universal product code.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,UpdateQuote (),System.String,"{""Title"":""string UpdateQuote ()"",""Summary"":""\r\n            Updates inline product configuration in the quote.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
Product,Scripting.IProduct,"{""Title"":""interface Scripting.IProduct"",""Summary"":""\r\n            Product information\r\n            ""}",FALSE,Scripting,FALSE,Weight,System.String,"{""Title"":""string Weight"",""Summary"":""\r\n            Gets or sets the product weight.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,CanAlterQuantity (productId),System.Boolean,"{""Title"":""bool CanAlterQuantity (int productId)"",""Summary"":""\r\n            Determines whether product quantity can be altered.\r\n            ""}",TRUE,mscorlib,TRUE,productId,int,Product Id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,CanAlterQuantity (productSystemId),System.Boolean,"{""Title"":""bool CanAlterQuantity (string productSystemId)"",""Summary"":""\r\n            Determines whether product quantity can be altered.\r\n            Throws validation error if product not exist for provided system id.\r\n            ""}",TRUE,mscorlib,TRUE,productSystemId,string,Product System Id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,CanBeAddedToQuote (productId),System.Boolean,"{""Title"":""bool CanBeAddedToQuote (int productId)"",""Summary"":""\r\n            Determines whether user can add product to the quote.\r\n            ""}",TRUE,mscorlib,TRUE,productId,int,Product Id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,CanBeAddedToQuote (productSystemId),System.Boolean,"{""Title"":""bool CanBeAddedToQuote (string productSystemId)"",""Summary"":""\r\n            Determines whether user can add product to the quote.\r\n            Throws validation error if product not exist for provided system id.\r\n            ""}",TRUE,mscorlib,TRUE,productSystemId,string,Product System Id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateExternalProductFromVariantConfiguration (variantConfigurationJson, externalConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateExternalProductFromVariantConfiguration (string variantConfigurationJson, string externalConfiguration)"",""Summary"":""\r\n            Creates product's instance from variant configuration json.\r\n            ""}",FALSE,Scripting,TRUE,variantConfigurationJson,string,Variant Configuration JSON payload in the external format of a Configuration.,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateExternalProductFromVariantConfiguration (variantConfigurationJson, externalConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateExternalProductFromVariantConfiguration (string variantConfigurationJson, string externalConfiguration)"",""Summary"":""\r\n            Creates product's instance from variant configuration json.\r\n            ""}",FALSE,Scripting,TRUE,externalConfiguration,string,External configuration.,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,CreateProduct (productId),Scripting.IProduct,"{""Title"":""IProduct CreateProduct (int productId)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on product id.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,productId,int,Product id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productId, packedConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (int productId, string packedConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product id and packed product CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,productId,int,Product id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productId, packedConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (int productId, string packedConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product id and packed product CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,packedConfiguration,string,Packed product CSVPAVID configuration,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productId, packedConfiguration, packedContainerConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (int productId, string packedConfiguration, string packedContainerConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product id, provided packed product CSVPAVID configuration and provided packed container CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,productId,int,Product id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productId, packedConfiguration, packedContainerConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (int productId, string packedConfiguration, string packedContainerConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product id, provided packed product CSVPAVID configuration and provided packed container CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,packedConfiguration,string,Packed product CSVPAVID configuration,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productId, packedConfiguration, packedContainerConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (int productId, string packedConfiguration, string packedContainerConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product id, provided packed product CSVPAVID configuration and provided packed container CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,packedContainerConfiguration,string,Packed container data configuration,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,CreateProduct (productSystemId),Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string productSystemId)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on product system id.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,productSystemId,string,Product system id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productSystemId, packedConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string productSystemId, string packedConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product system id and provided packed product CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,productSystemId,string,Product system id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productSystemId, packedConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string productSystemId, string packedConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product system id and provided packed product CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,packedConfiguration,string,Packed product CSVPAVID configuration,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productSystemId, packedConfiguration, packedContainerConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string productSystemId, string packedConfiguration, string packedContainerConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product system id, provided packed product CSVPAVID configuration and provided packed container CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,productSystemId,string,Product system id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productSystemId, packedConfiguration, packedContainerConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string productSystemId, string packedConfiguration, string packedContainerConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product system id, provided packed product CSVPAVID configuration and provided packed container CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,packedConfiguration,string,Packed product CSVPAVID configuration,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (productSystemId, packedConfiguration, packedContainerConfiguration)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string productSystemId, string packedConfiguration, string packedContainerConfiguration)"",""Summary"":""\r\n            Creates product's instance for inline manipulation of product configuration through scripting based on<br />\r\n            product system id, provided packed product CSVPAVID configuration and provided packed container CSVPAVID configuration.<br />\r\n            User remains on the quote or in other product's configurator, with created product's instance for item inline modification.\r\n            ""}",FALSE,Scripting,TRUE,packedContainerConfiguration,string,Packed container data configuration,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (quoteCompositeNumber, quoteItem)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string quoteCompositeNumber, int quoteItem)"",""Summary"":""\r\n            Creates product instance (item and sub-items) from existing quote item.<br />\r\n            Enables reloading existing (old) configurations.\r\n            ""}",FALSE,Scripting,TRUE,quoteCompositeNumber,string,Quote composite number,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateProduct (quoteCompositeNumber, quoteItem)",Scripting.IProduct,"{""Title"":""IProduct CreateProduct (string quoteCompositeNumber, int quoteItem)"",""Summary"":""\r\n            Creates product instance (item and sub-items) from existing quote item.<br />\r\n            Enables reloading existing (old) configurations.\r\n            ""}",FALSE,Scripting,TRUE,quoteItem,int,Quote item,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateVariantProductFromVariantConfiguration (variantConfigurationJson, configurationId)",Scripting.IProduct,"{""Title"":""IProduct CreateVariantProductFromVariantConfiguration (string variantConfigurationJson, string configurationId)"",""Summary"":""\r\n            Creates product's instance from variant configuration json.\r\n            ""}",FALSE,Scripting,TRUE,variantConfigurationJson,string,Variant Configuration JSON payload in the external format of a Configuration.,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateVariantProductFromVariantConfiguration (variantConfigurationJson, configurationId)",Scripting.IProduct,"{""Title"":""IProduct CreateVariantProductFromVariantConfiguration (string variantConfigurationJson, string configurationId)"",""Summary"":""\r\n            Creates product's instance from variant configuration json.\r\n            ""}",FALSE,Scripting,TRUE,configurationId,string,Variant Configuration Identifier.,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,IsSimpleProduct (productId),System.Boolean,"{""Title"":""bool IsSimpleProduct (int productId)"",""Summary"":""\r\n            Determines whether product is simple.\r\n            ""}",TRUE,mscorlib,TRUE,productId,int,Product Id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,IsSimpleProduct (productSystemId),System.Boolean,"{""Title"":""bool IsSimpleProduct (string productSystemId)"",""Summary"":""\r\n            Determines whether product is simple.\r\n            Throws validation error if product not exist for provided system id.\r\n            ""}",TRUE,mscorlib,TRUE,productSystemId,string,Product System Id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,IsVisibleToCurrentUser (productId),System.Boolean,"{""Title"":""bool IsVisibleToCurrentUser (int productId)"",""Summary"":""\r\n            Determines whether product is visible.\r\n            ""}",TRUE,mscorlib,TRUE,productId,int,Product Id,,,,
ProductHelper,Scripting.IProductHelper,"{""Title"":""interface Scripting.IProductHelper"",""Summary"":""\r\n            Helper class which allow us to globally manipulate the products.\r\n            <example><h3>Check if product is simple by product's system id</h3><code language=\""python\"">\r\n            if ProductHelper.IsSimpleProduct(\""Laptop_Computer_cpq\""):\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is simple product\""\r\n            else:\r\n                Quote.GetCustomField(\""SimpleProducts\"").Content = \""Laptop is configurable product\""\r\n            </code><h3>Inline adding new product with configuration to the quote</h3>\r\n            Product with configuration can be configured and added automatically through scripting\r\n            without leaving currently opened quote (for example, by clicking custom quote action with following script example)<br />\r\n            or can be inlined configured and added from other product's configurator through script attached on some product event<br />\r\n            (When product rule execution ends, When product configuration is completed, Before Add to quote, When product is added to quote etc.).<br />\r\n            All quote calculations will be executed in the same way as item is manually added from the configurator.<br />\r\n            Important note - rules will not be triggered when attribute values are modified through scripting.<br />\r\n            To enforce standard CPQ rules' execution, add Product.ApplyRules() before doing update of configuration.\r\n            <code language=\""python\"">\r\n            inlineProduct = ProductHelper.CreateProduct('Maintenance_cpq')\r\n            inlineProduct.Attributes.GetByName('1 Year Support').SelectValue('1')\r\n            inlineProduct.Attributes.GetByName('Maintenance duration').SelectValue('1-YEAR')\r\n            inlineProduct.Attributes.GetByName('Contract Type').AssignValue('New contract signed')\r\n            inlineProduct.AddToQuote()\r\n            </code></example>""}",FALSE,Scripting,FALSE,IsVisibleToCurrentUser (productSystemId),System.Boolean,"{""Title"":""bool IsVisibleToCurrentUser (string productSystemId)"",""Summary"":""\r\n            Determines whether product is visible.\r\n            Throws validation error if product not exist for provided system id.\r\n            ""}",TRUE,mscorlib,TRUE,productSystemId,string,Product System Id,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,Copy (quoteNumber),Scripting.Quote.IQuoteInfo,"{""Title"":""IQuoteInfo Copy (string quoteNumber)"",""Summary"":""\r\n            Copies Quote with provided Quote Number.\r\n            ""}",FALSE,Scripting,TRUE,quoteNumber,string,Quote Number,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,CreateNewQuote (quoteNumber),Scripting.Quote.ISavableQuote,"{""Title"":""ISavableQuote CreateNewQuote (string quoteNumber)"",""Summary"":""\r\n            Creates and persists a new empty Quote owned by the user who created it in default status (as set up in Workflow).\r\n            ""}",FALSE,Scripting,TRUE,quoteNumber,string,An optional custom quote number to assign to the newly created Quote.,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,Delete (quoteId),Scripting.Quote.IQuoteInfo,"{""Title"":""IQuoteInfo Delete (int quoteId)"",""Summary"":""\r\n            Deletes quote by provided Quote Id. If the Id refers to an active revision, then all inactive revisions of the quote are deleted too. If the Id refers to an inactive revision, then only that inactive revision is deleted.\r\n            ""}",FALSE,Scripting,TRUE,quoteId,int,Quote Id,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,Delete (quoteNumber),Scripting.Quote.IQuoteInfo,"{""Title"":""IQuoteInfo Delete (string quoteNumber)"",""Summary"":""\r\n            Deletes Quote with provided Quote Number.\r\n            ""}",FALSE,Scripting,TRUE,quoteNumber,string,,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,Get (quoteId),Scripting.Quote.ISavableQuote,"{""Title"":""ISavableQuote Get (int quoteId)"",""Summary"":""\r\n            Gets the Quote with provided Quote Id.\r\n            ""}",FALSE,Scripting,TRUE,quoteId,int,Quote Id,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,Get (quoteNumber),Scripting.Quote.ISavableQuote,"{""Title"":""ISavableQuote Get (string quoteNumber)"",""Summary"":""\r\n            Gets the Quote with provided Quote Number.\r\n            ""}",FALSE,Scripting,TRUE,quoteNumber,string,Quote Number,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetRevisions (quoteId),"System.Collections.Generic.IEnumerable`1[[Scripting.Quote.IQuoteRevision, Scripting, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cd82423e43a9441d]]","{""Title"":""IEnumerable<IQuoteRevision> GetRevisions (int quoteId)"",""Summary"":""\r\n            Gets list of quote revisions for provided quote identifier.\r\n            ""}",FALSE,mscorlib,TRUE,quoteId,int,,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetRevisions (quoteNumber),"System.Collections.Generic.IEnumerable`1[[Scripting.Quote.IQuoteRevision, Scripting, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cd82423e43a9441d]]","{""Title"":""IEnumerable<IQuoteRevision> GetRevisions (string quoteNumber)"",""Summary"":""\r\n            Gets list of quote revisions for provided quote number.\r\n            ""}",FALSE,mscorlib,TRUE,quoteNumber,string,,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Reassign (quoteNumber, userName)",Scripting.Quote.IQuoteInfo,"{""Title"":""IQuoteInfo Reassign (string quoteNumber, string userName)"",""Summary"":""\r\n            Reassigns Quote to specified user.\r\n            ""}",FALSE,Scripting,TRUE,quoteNumber,string,Quote Number,,,,
QuoteHelper,Scripting.Quote.IQuoteHelper,"{""Title"":""interface Scripting.Quote.IQuoteHelper"",""Summary"":""\r\n            Allows global manipulations of the Quotes.\r\n            <example><h3>Create a new Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.CreateNewQuote()\r\n            </code><h3>Reassign Quote to specified user</h3>\r\n            Return parameter is of type IQuoteInfo,<br />\r\n            containing new quote id, new user id and new quote number.\r\n            <code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Reassign(\""00021520\"", \""jsmith\"")\r\n            </code><h3>Delete Quote</h3><code language=\""python\"">\r\n            quoteInfo = QuoteHelper.Delete(quoteNumber)\r\n            </code><h3>Gets the Quote</h3><code language=\""python\"">\r\n            quote = QuoteHelper.Get(quoteNumber)\r\n            quote.Comment = 'Some Quote Comment'\r\n            quote.Save()\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Reassign (quoteNumber, userName)",Scripting.Quote.IQuoteInfo,"{""Title"":""IQuoteInfo Reassign (string quoteNumber, string userName)"",""Summary"":""\r\n            Reassigns Quote to specified user.\r\n            ""}",FALSE,Scripting,TRUE,userName,string,Username of user to whom the quote is reassigned,,,,
Random,Scripting.IRandom,"{""Title"":""interface Scripting.IRandom"",""Summary"":""\r\n            The Random object is used to generate random numbers through scripting.\r\n            ""}",FALSE,Scripting,FALSE,Next (),System.Int32,"{""Title"":""int Next ()"",""Summary"":""\r\n            Returns a non-negative random integer.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
Random,Scripting.IRandom,"{""Title"":""interface Scripting.IRandom"",""Summary"":""\r\n            The Random object is used to generate random numbers through scripting.\r\n            ""}",FALSE,Scripting,FALSE,Next (maxValue),System.Int32,"{""Title"":""int Next (int maxValue)"",""Summary"":""\r\n            Returns a non-negative random integer that is less than the specified maximum.\r\n            ""}",TRUE,mscorlib,TRUE,maxValue,int,The exclusive upper bound of the random number to be generated. maxValue must be greater than or equal to 0.,,,,
Random,Scripting.IRandom,"{""Title"":""interface Scripting.IRandom"",""Summary"":""\r\n            The Random object is used to generate random numbers through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Next (minValue, maxValue)",System.Int32,"{""Title"":""int Next (int minValue, int maxValue)"",""Summary"":""\r\n            Returns a random integer that is within a specified range.\r\n            ""}",TRUE,mscorlib,TRUE,minValue,int,The inclusive lower bound of the random number returned.,,,,
Random,Scripting.IRandom,"{""Title"":""interface Scripting.IRandom"",""Summary"":""\r\n            The Random object is used to generate random numbers through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Next (minValue, maxValue)",System.Int32,"{""Title"":""int Next (int minValue, int maxValue)"",""Summary"":""\r\n            Returns a random integer that is within a specified range.\r\n            ""}",TRUE,mscorlib,TRUE,maxValue,int,The exclusive upper bound of the random number returned. maxValue must be greater than or equal to minValue.,,,,
Random,Scripting.IRandom,"{""Title"":""interface Scripting.IRandom"",""Summary"":""\r\n            The Random object is used to generate random numbers through scripting.\r\n            ""}",FALSE,Scripting,FALSE,NextDouble (),System.Double,"{""Title"":""Double NextDouble ()"",""Summary"":""\r\n            Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
RequestContext,Scripting.IRequestContext,"{""Title"":""interface Scripting.IRequestContext"",""Summary"":""\r\n            RequestContext represents a CPQ helper class that can be used to store additional information and entities that would be shared across one HTTP request \r\n            Items set in one script have the validity equal to one HTTP request \r\n            ""}",FALSE,Scripting,FALSE,Body,System.String,"{""Title"":""string Body"",""Summary"":""\r\n            Gets the contents of the incoming HTTP entity body in text format.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
RequestContext,Scripting.IRequestContext,"{""Title"":""interface Scripting.IRequestContext"",""Summary"":""\r\n            RequestContext represents a CPQ helper class that can be used to store additional information and entities that would be shared across one HTTP request \r\n            Items set in one script have the validity equal to one HTTP request \r\n            ""}",FALSE,Scripting,FALSE,Form,System.Collections.Specialized.NameValueCollection,"{""Title"":""NameValueCollection Form"",""Summary"":""\r\n            Gets a collection of form variables.\r\n            ""}",FALSE,System,FALSE,null,null,null,,,,
RequestContext,Scripting.IRequestContext,"{""Title"":""interface Scripting.IRequestContext"",""Summary"":""\r\n            RequestContext represents a CPQ helper class that can be used to store additional information and entities that would be shared across one HTTP request \r\n            Items set in one script have the validity equal to one HTTP request \r\n            ""}",FALSE,Scripting,FALSE,Items,Scripting.IRequestItems,"{""Title"":""IRequestItems Items"",""Summary"":""\r\n            Gets the key/value collection set in current request context\r\n            <example><h3>Setting objects into request items based on provided key</h3><code language=\""python\"">\r\n            RequestContext.Items[\""my_key\""] = \""My value\""\r\n            </code><h3>Reading value set in Items key/value collection based on provided key and tracing it</h3><code language=\""python\"">\r\n            myVariable = RequestContext.Items[\""my_key\""]\r\n            if myVariable is not None and myVariable == \""My value\"":\r\n                Trace.Write(\""Correct value was retrieved from request items.\"")\r\n            </code></example>""}",FALSE,Scripting,FALSE,null,null,null,,,,
RequestContext,Scripting.IRequestContext,"{""Title"":""interface Scripting.IRequestContext"",""Summary"":""\r\n            RequestContext represents a CPQ helper class that can be used to store additional information and entities that would be shared across one HTTP request \r\n            Items set in one script have the validity equal to one HTTP request \r\n            ""}",FALSE,Scripting,FALSE,QueryString,System.Collections.Specialized.NameValueCollection,"{""Title"":""NameValueCollection QueryString"",""Summary"":""\r\n            Gets the collection of HTTP query string variables.\r\n            ""}",FALSE,System,FALSE,null,null,null,,,,
RequestContext,Scripting.IRequestContext,"{""Title"":""interface Scripting.IRequestContext"",""Summary"":""\r\n            RequestContext represents a CPQ helper class that can be used to store additional information and entities that would be shared across one HTTP request \r\n            Items set in one script have the validity equal to one HTTP request \r\n            ""}",FALSE,Scripting,FALSE,RawUrl,System.String,"{""Title"":""string RawUrl"",""Summary"":""\r\n            Gets the raw URL from the current request.\r\n            This is equivalent to HttpContext.Current.Request.RawUrl from .NET System.Web namespace\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
RequestContext,Scripting.IRequestContext,"{""Title"":""interface Scripting.IRequestContext"",""Summary"":""\r\n            RequestContext represents a CPQ helper class that can be used to store additional information and entities that would be shared across one HTTP request \r\n            Items set in one script have the validity equal to one HTTP request \r\n            ""}",FALSE,Scripting,FALSE,Url,System.Uri,"{""Title"":""Uri Url"",""Summary"":""\r\n            Gets the URL from the current request.\r\n            This is equivalent to HttpContext.Current.Request.Url from .NET System.Web namespace\r\n            ""}",FALSE,System,FALSE,null,null,null,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,Delete (uri),System.Object,"{""Title"":""Object Delete (string uri)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, headers)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, headers)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,DeserializeJson (input),System.Object,"{""Title"":""Object DeserializeJson (string input)"",""Summary"":""\r\n            Deserializes the specified JSON input\r\n            ""}",TRUE,mscorlib,TRUE,input,string,The input string for deserialization,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,Get (uri),System.Object,"{""Title"":""Object Get (string uri)"",""Summary"":""\r\n            HTTP GET JSON method.\r\n            <h4>Returns:</h4>\r\n            Response body if status code is 2xx. Error, otherwise.<br /><example><h4>Example:</h4><code language=\""python\"">\r\n            responseBody = RestClient.Get(\""{{uri}}\"")<br />\r\n            Trace.Write(responseBody)<br /></code></example>""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (uri, headers)",System.Object,"{""Title"":""Object Get (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (uri, headers)",System.Object,"{""Title"":""Object Get (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method.\r\n            <example><h4>Example when returnHeadersAndCookies parameter is False:</h4><code language=\""python\"">\r\n            responseBody = RestClient.Get(\""{{uri}}\"", False)<br />\r\n            Trace.Write(responseBody)<br /></code></example><example><h4>Example when returnHeadersAndCookies parameter is True:</h4><code language=\""python\"">\r\n            response = RestClient.Get(\""{{uri}}\"", True)<br />\r\n            Trace.Write(response.Body)<br />\r\n            Trace.Write(response.Cookies)<br />\r\n            Trace.Write(response.Headers)<br />\r\n            Trace.Write(response.StatusCode)<br /></code></example>""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method.\r\n            <example><h4>Example when returnHeadersAndCookies parameter is False:</h4><code language=\""python\"">\r\n            responseBody = RestClient.Get(\""{{uri}}\"", False)<br />\r\n            Trace.Write(responseBody)<br /></code></example><example><h4>Example when returnHeadersAndCookies parameter is True:</h4><code language=\""python\"">\r\n            response = RestClient.Get(\""{{uri}}\"", True)<br />\r\n            Trace.Write(response.Body)<br />\r\n            Trace.Write(response.Cookies)<br />\r\n            Trace.Write(response.Headers)<br />\r\n            Trace.Write(response.StatusCode)<br /></code></example>""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetBasicAuthenticationHeader (username, password)",System.String,"{""Title"":""string GetBasicAuthenticationHeader (string username, string password)"",""Summary"":""\r\n            Gets authentication header based on provided username and password.\r\n            <example><h4>Example:</h4><code language=\""python\"">\r\n            authorization_token = RestClient.GetBasicAuthenticationHeader(\""username\"", \""password\"")<br />\r\n            # authorization_token is like \""Basic {{token}}\""<br /></code></example><example><h4>Example:</h4><code language=\""python\"">\r\n            authorization_token = RestClient.GetBasicAuthenticationHeader(\""username\"", \""password\"")<br /><br />\r\n            headers = { \""Authorization\"": authorization_token }<br />\r\n            responseBody = RestClient.Get(\""{{uri}}\"", headers)<br />\r\n            Trace.Write(responseBody)<br /></code></example>""}",TRUE,mscorlib,TRUE,username,string,Authentication username.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetBasicAuthenticationHeader (username, password)",System.String,"{""Title"":""string GetBasicAuthenticationHeader (string username, string password)"",""Summary"":""\r\n            Gets authentication header based on provided username and password.\r\n            <example><h4>Example:</h4><code language=\""python\"">\r\n            authorization_token = RestClient.GetBasicAuthenticationHeader(\""username\"", \""password\"")<br />\r\n            # authorization_token is like \""Basic {{token}}\""<br /></code></example><example><h4>Example:</h4><code language=\""python\"">\r\n            authorization_token = RestClient.GetBasicAuthenticationHeader(\""username\"", \""password\"")<br /><br />\r\n            headers = { \""Authorization\"": authorization_token }<br />\r\n            responseBody = RestClient.Get(\""{{uri}}\"", headers)<br />\r\n            Trace.Write(responseBody)<br /></code></example>""}",TRUE,mscorlib,TRUE,password,string,Authentication password.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetStream (uri, requestHeaders)",System.IO.Stream,"{""Title"":""Stream GetStream (string uri, IDictionary<string,string> requestHeaders)"",""Summary"":""""}",FALSE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetStream (uri, requestHeaders)",System.IO.Stream,"{""Title"":""Stream GetStream (string uri, IDictionary<string,string> requestHeaders)"",""Summary"":""""}",FALSE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetStream (uri, requestHeaders, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetStream (string uri, IDictionary<string,string> requestHeaders, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetStream (uri, requestHeaders, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetStream (string uri, IDictionary<string,string> requestHeaders, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetStream (uri, requestHeaders, returnHeadersAndCookies)",System.Object,"{""Title"":""Object GetStream (string uri, IDictionary<string,string> requestHeaders, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,Patch (uri),System.Object,"{""Title"":""Object Patch (string uri)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, headers)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, headers)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters)",System.Object,"{""Title"":""Object Patch (string uri, string parameters)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters)",System.Object,"{""Title"":""Object Patch (string uri, string parameters)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,PATCH request parameters.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,PATCH request parameters.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PATCH JSON method (for partial update)\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,Post (uri),System.Object,"{""Title"":""Object Post (string uri)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters)",System.Object,"{""Title"":""Object Post (string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters)",System.Object,"{""Title"":""Object Post (string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody)"",""Summary"":""""}",TRUE,mscorlib,TRUE,contentType,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody)"",""Summary"":""""}",TRUE,mscorlib,TRUE,compressBody,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,contentType,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,compressBody,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,Put (uri),System.Object,"{""Title"":""Object Put (string uri)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, headers)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, headers)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters)",System.Object,"{""Title"":""Object Put (string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters)",System.Object,"{""Title"":""Object Put (string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, requestHeaders, content)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,,,,
RestClient,Scripting.IRestClient,"{""Title"":""interface Scripting.IRestClient"",""Summary"":""\r\n            Client for communication with RESTful services\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = RestClient.Get('http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with authorization and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            #example of user autorization header\r\n            headers = { 'authorization': RestClient.GetBasicAuthenticationHeader('SAPUsername', 'SAPPassword') }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = RestClient.Post(url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonus unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,SerializeToJson (obj),System.String,"{""Title"":""string SerializeToJson (Object obj)"",""Summary"":""\r\n            Deserializes the specified entity to JSON\r\n            ""}",TRUE,mscorlib,TRUE,obj,Object,Entity for serialization,,,,
SalesArea,Scripting.ISalesArea,"{""Title"":""interface Scripting.ISalesArea"",""Summary"":""\r\n            Class which allow us to fetch sales area data.\r\n            Class represents the combination of Sales Organization, Distribution Channel and Division\r\n            <example><h3>Get the distribution channel</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            distributionChannel = SalesArea.DistributionChannel\r\n            </code><h3>Get the sales area division</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            division = SalesArea.Division\r\n            </code><h3>Get the sales organization</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            salesOrganization = SalesArea.SalesOrganization\r\n            </code></example>""}",FALSE,Scripting,FALSE,DistributionChannel,System.String,"{""Title"":""string DistributionChannel"",""Summary"":""\r\n            Gets the sales area distribution channel.<br />\r\n            Example values would be \""Direct\"" versus \""Indirect\""<br />\r\n            Returns value from the loaded quote. Returns Distribution Channel on default pricebook if quote is not loaded.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
SalesArea,Scripting.ISalesArea,"{""Title"":""interface Scripting.ISalesArea"",""Summary"":""\r\n            Class which allow us to fetch sales area data.\r\n            Class represents the combination of Sales Organization, Distribution Channel and Division\r\n            <example><h3>Get the distribution channel</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            distributionChannel = SalesArea.DistributionChannel\r\n            </code><h3>Get the sales area division</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            division = SalesArea.Division\r\n            </code><h3>Get the sales organization</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            salesOrganization = SalesArea.SalesOrganization\r\n            </code></example>""}",FALSE,Scripting,FALSE,Division,System.String,"{""Title"":""string Division"",""Summary"":""\r\n            Gets the sales area division.<br />\r\n            The division is the product line, e.g. \""Hardware\"" or \""Software\"".\r\n            Returns value from the loaded quote. Returns value defined in SAP_STANDALONE_DIVISION if quote is not loaded.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
SalesArea,Scripting.ISalesArea,"{""Title"":""interface Scripting.ISalesArea"",""Summary"":""\r\n            Class which allow us to fetch sales area data.\r\n            Class represents the combination of Sales Organization, Distribution Channel and Division\r\n            <example><h3>Get the distribution channel</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            distributionChannel = SalesArea.DistributionChannel\r\n            </code><h3>Get the sales area division</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            division = SalesArea.Division\r\n            </code><h3>Get the sales organization</h3>\r\n            Return parameter is of type <see cref=\""T:System.String\"" />,<br /><code language=\""python\"">\r\n            salesOrganization = SalesArea.SalesOrganization\r\n            </code></example>""}",FALSE,Scripting,FALSE,SalesOrganization,System.String,"{""Title"":""string SalesOrganization"",""Summary"":""\r\n            Gets the sales area sales organization.<br /> \r\n            Sales organization models the organizational aspect. It is assigned to a legal entity.\r\n            Returns value from the loaded quote. Returns default market code if quote is not loaded.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
SamlAssertionProvider,Scripting.ISamlAssertionProvider,"{""Title"":""interface Scripting.ISamlAssertionProvider"",""Summary"":""\r\n            SamlAssertionProvider serves us to generate saml assertion.\r\n            ""}",FALSE,Scripting,FALSE,Generate (profileName),System.String,"{""Title"":""string Generate (string profileName)"",""Summary"":""\r\n            Load existing profile and return saml assertion payload based on it in base64 format.\r\n            ""}",TRUE,mscorlib,TRUE,profileName,string,,,,,
SamlAssertionProvider,Scripting.ISamlAssertionProvider,"{""Title"":""interface Scripting.ISamlAssertionProvider"",""Summary"":""\r\n            SamlAssertionProvider serves us to generate saml assertion.\r\n            ""}",FALSE,Scripting,FALSE,"Generate (profileName, base64Encoded)",System.String,"{""Title"":""string Generate (string profileName, bool base64Encoded)"",""Summary"":""\r\n            Load existing profile and return saml assertion payload.\r\n            ""}",TRUE,mscorlib,TRUE,profileName,string,,,,,
SamlAssertionProvider,Scripting.ISamlAssertionProvider,"{""Title"":""interface Scripting.ISamlAssertionProvider"",""Summary"":""\r\n            SamlAssertionProvider serves us to generate saml assertion.\r\n            ""}",FALSE,Scripting,FALSE,"Generate (profileName, base64Encoded)",System.String,"{""Title"":""string Generate (string profileName, bool base64Encoded)"",""Summary"":""\r\n            Load existing profile and return saml assertion payload.\r\n            ""}",TRUE,mscorlib,TRUE,base64Encoded,bool,,,,,
SapPassport,Scripting.ISapPassport,"{""Title"":""interface Scripting.ISapPassport"",""Summary"":""\r\n            Represent interface for creating SAP Passport headers. \r\n            Visit following link for more information: <see href=\""https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/tracing/android/passport.html\"" />""}",FALSE,Scripting,FALSE,GeneratePassport (action),"System.Collections.Generic.KeyValuePair`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]","{""Title"":""KeyValuePair<string,string> GeneratePassport (string action)"",""Summary"":""\r\n            Creates SAP Passport header.\r\n            ""}",FALSE,mscorlib,TRUE,action,string,Sap action.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,Execute (scriptName),System.Object,"{""Title"":""Object Execute (string scriptName)"",""Summary"":""\r\n            Executes the specified script without input parameters.\r\n            ""}",TRUE,mscorlib,TRUE,scriptName,string,Name of the script. System will get the script with this name only if it's marked active. Name is not case sensitive.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"Execute (scriptName, param)",System.Object,"{""Title"":""Object Execute (string scriptName, IDictionary param)"",""Summary"":""\r\n            Executes the script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,scriptName,string,Name of the script. System will get the script with this name only if it's marked active. Name is not case sensitive.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"Execute (scriptName, param)",System.Object,"{""Title"":""Object Execute (string scriptName, IDictionary param)"",""Summary"":""\r\n            Executes the script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,param,IDictionary,The input parameter(s) that might be used in specified script.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"Execute (scriptName, param)",System.Object,"{""Title"":""Object Execute (string scriptName, string param)"",""Summary"":""\r\n            Executes the script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,scriptName,string,Name of the script. System will get the script with this name only if it's marked active. Name is not case sensitive.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"Execute (scriptName, param)",System.Object,"{""Title"":""Object Execute (string scriptName, string param)"",""Summary"":""\r\n            Executes the script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,param,string,The single input parameter that might be used in specified script.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,ExecuteGlobal (scriptName),System.Object,"{""Title"":""Object ExecuteGlobal (string scriptName)"",""Summary"":""\r\n            Executes the specified global script without input parameters.\r\n            ""}",TRUE,mscorlib,TRUE,scriptName,string,Name of the global script. System will get the global script with this name only if it's marked active. Name is not case sensitive.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"ExecuteGlobal (scriptName, param)",System.Object,"{""Title"":""Object ExecuteGlobal (string scriptName, IDictionary param)"",""Summary"":""\r\n            Executes the global script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,scriptName,string,Name of the global script. System will get the global script with this name only if it's marked active. Name is not case sensitive.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"ExecuteGlobal (scriptName, param)",System.Object,"{""Title"":""Object ExecuteGlobal (string scriptName, IDictionary param)"",""Summary"":""\r\n            Executes the global script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,param,IDictionary,The input parameter(s) that might be used in specified global script.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"ExecuteGlobal (scriptName, param)",System.Object,"{""Title"":""Object ExecuteGlobal (string scriptName, string param)"",""Summary"":""\r\n            Executes the global script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,scriptName,string,Name of the global script. System will get the global script with this name only if it's marked active. Name is not case sensitive.,,,,
ScriptExecutor,Scripting.IScriptExecutor,"{""Title"":""interface Scripting.IScriptExecutor"",""Summary"":""\r\n            API that gives you ability to run script from another script. Script that's executed needs to be active.\r\n            <example><h3>To execute script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.Execute(\""My_Script\"")\r\n            </code><h3>If the script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"")\r\n            \r\n            # **** SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the script name is not valid or script is not active, Execute() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.Execute(\""My_Script\"", {'ID':5, 'Name': 'John', 'Company': 'ABC Inc'})\r\n            \r\n            # In script \""My_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in Execute() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example><example><h3>To execute global script from the current code, use the following call:</h3><code language=\""python\"">\r\n            ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            </code><h3>If the global script you're executing returns a value, use the following code:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"")\r\n            \r\n            # **** GLOBAL SCRIPT WHICH RETURNS SOME VALUE MUST SET THAT VALUE TO VARIABLE NAMED 'Result' ****\r\n            # example: My_Global_Script\r\n            \r\n            # .... logic here...\r\n            x = \""some return value...\""\r\n            Result = x\r\n            </code><h3><i>In case the global script name is not valid or global script is not active, ExecuteGlobal() method will return 'None' value.</i></h3><h3>You can also provide input parameters that are required in called global script. All input parameters should be put in dictionary:</h3><code language=\""python\"">\r\n            result = ScriptExecutor.ExecuteGlobal(\""My_Global_Script\"", {'ID':6, 'Name': 'Jack', 'Company': 'DEF Inc'})\r\n            \r\n            # In script \""My_Global_Script\"", you can use these input parameters by consuming variable 'Param' like follows:\r\n            \r\n            #...logic here...\r\n            name = Param.Name\r\n            id = Param.ID\r\n            company = Param.Company\r\n            \r\n            # note that Param properties must be named exactly the same as input parameters in ExecuteGlobal() method \r\n            \r\n            Product.Attributes.GetByName(\""Name\"").AssignValue(name)\r\n            Product.Attributes.GetByName(\""Id\"").AssignValue(id)\r\n            Product.Attributes.GetByName(\""Company\"").SelectValue(company)\r\n            #...... \r\n            </code></example>""}",FALSE,Scripting,FALSE,"ExecuteGlobal (scriptName, param)",System.Object,"{""Title"":""Object ExecuteGlobal (string scriptName, string param)"",""Summary"":""\r\n            Executes the global script by specified name.\r\n            ""}",TRUE,mscorlib,TRUE,param,string,The single input parameter that might be used in specified global script.,,,,
Session,Scripting.ISession,"{""Title"":""interface Scripting.ISession"",""Summary"":""\r\n            Represents class for keeping an object within the session.<br />\r\n            These objects can be shared among scripts.<br />\r\n            Lifetime of these objects ends when the user signs out.<br />""}",FALSE,Scripting,FALSE,Item,System.Object,"{""Title"":""Object this[string key]"",""Summary"":""\r\n            Gets or sets the <see cref=\""T:System.Object\"" /> with the specified key.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateAttachment (contentStream, name)",Scripting.IAttachment,"{""Title"":""IAttachment CreateAttachment (Stream contentStream, string name)"",""Summary"":""\r\n            Creates an instance of Attachment.\r\n            ""}",FALSE,Scripting,TRUE,contentStream,Stream,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateAttachment (contentStream, name)",Scripting.IAttachment,"{""Title"":""IAttachment CreateAttachment (Stream contentStream, string name)"",""Summary"":""\r\n            Creates an instance of Attachment.\r\n            ""}",FALSE,Scripting,TRUE,name,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailAddress (address, displayName)",Scripting.IMailAddress,"{""Title"":""IMailAddress CreateMailAddress (string address, string displayName)"",""Summary"":""\r\n            Creates an instance of MailAddress.\r\n            ""}",FALSE,Scripting,TRUE,address,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailAddress (address, displayName)",Scripting.IMailAddress,"{""Title"":""IMailAddress CreateMailAddress (string address, string displayName)"",""Summary"":""\r\n            Creates an instance of MailAddress.\r\n            ""}",FALSE,Scripting,TRUE,displayName,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml)"",""Summary"":""""}",FALSE,Scripting,TRUE,from,IMailAddress,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml)"",""Summary"":""""}",FALSE,Scripting,TRUE,to,IEnumerable<IMailAddress>,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml)"",""Summary"":""""}",FALSE,Scripting,TRUE,subject,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml)"",""Summary"":""""}",FALSE,Scripting,TRUE,body,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml)"",""Summary"":""""}",FALSE,Scripting,TRUE,isBodyHtml,bool,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml, attachments)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml, IEnumerable<IAttachment> attachments)"",""Summary"":""""}",FALSE,Scripting,TRUE,from,IMailAddress,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml, attachments)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml, IEnumerable<IAttachment> attachments)"",""Summary"":""""}",FALSE,Scripting,TRUE,to,IEnumerable<IMailAddress>,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml, attachments)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml, IEnumerable<IAttachment> attachments)"",""Summary"":""""}",FALSE,Scripting,TRUE,subject,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml, attachments)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml, IEnumerable<IAttachment> attachments)"",""Summary"":""""}",FALSE,Scripting,TRUE,body,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml, attachments)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml, IEnumerable<IAttachment> attachments)"",""Summary"":""""}",FALSE,Scripting,TRUE,isBodyHtml,bool,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateMailMessage (from, to, subject, body, isBodyHtml, attachments)",Scripting.IMailMessage,"{""Title"":""IMailMessage CreateMailMessage (IMailAddress from, IEnumerable<IMailAddress> to, string subject, string body, bool isBodyHtml, IEnumerable<IAttachment> attachments)"",""Summary"":""""}",FALSE,Scripting,TRUE,attachments,IEnumerable<IAttachment>,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateNetworkCredential (userName, password)",Scripting.INetworkCredential,"{""Title"":""INetworkCredential CreateNetworkCredential (string userName, string password)"",""Summary"":""\r\n            Creates an instance of NetworkCredential.\r\n            ""}",FALSE,Scripting,TRUE,userName,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"CreateNetworkCredential (userName, password)",Scripting.INetworkCredential,"{""Title"":""INetworkCredential CreateNetworkCredential (string userName, string password)"",""Summary"":""\r\n            Creates an instance of NetworkCredential.\r\n            ""}",FALSE,Scripting,TRUE,password,string,,,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Send (message, host)",System.Void,"{""Title"":""void Send (IMailMessage message, string host)"",""Summary"":""\r\n            Sends the specified message to an SMTP server for delivery.\r\n            ""}",TRUE,mscorlib,TRUE,message,IMailMessage,"
\n            A MailMessage that contains the message to send.
\n            ",,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Send (message, host)",System.Void,"{""Title"":""void Send (IMailMessage message, string host)"",""Summary"":""\r\n            Sends the specified message to an SMTP server for delivery.\r\n            ""}",TRUE,mscorlib,TRUE,host,string,"
\n            A name or IP address of the host used for SMTP transactions.
\n            ",,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Send (message, host, port, credentials, enableSsl)",System.Void,"{""Title"":""void Send (IMailMessage message, string host, int port, INetworkCredential credentials, bool enableSsl)"",""Summary"":""\r\n            Sends the specified message to an SMTP server for delivery.\r\n            ""}",TRUE,mscorlib,TRUE,message,IMailMessage,"
\n            A MailMessage that contains the message to send.
\n            ",,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Send (message, host, port, credentials, enableSsl)",System.Void,"{""Title"":""void Send (IMailMessage message, string host, int port, INetworkCredential credentials, bool enableSsl)"",""Summary"":""\r\n            Sends the specified message to an SMTP server for delivery.\r\n            ""}",TRUE,mscorlib,TRUE,host,string,"
\n            A name or IP address of the host used for SMTP transactions.
\n            ",,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Send (message, host, port, credentials, enableSsl)",System.Void,"{""Title"":""void Send (IMailMessage message, string host, int port, INetworkCredential credentials, bool enableSsl)"",""Summary"":""\r\n            Sends the specified message to an SMTP server for delivery.\r\n            ""}",TRUE,mscorlib,TRUE,port,int,"
\n            A port used for SMTP transactions.
\n            ",,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Send (message, host, port, credentials, enableSsl)",System.Void,"{""Title"":""void Send (IMailMessage message, string host, int port, INetworkCredential credentials, bool enableSsl)"",""Summary"":""\r\n            Sends the specified message to an SMTP server for delivery.\r\n            ""}",TRUE,mscorlib,TRUE,credentials,INetworkCredential,"
\n            A credentials used to authenticate the sender.
\n            ",,,,
SmtpClient,Scripting.ISmtpClient,"{""Title"":""interface Scripting.ISmtpClient"",""Summary"":""\r\n            The SmtpClient object is used to send emails through scripting.\r\n            ""}",FALSE,Scripting,FALSE,"Send (message, host, port, credentials, enableSsl)",System.Void,"{""Title"":""void Send (IMailMessage message, string host, int port, INetworkCredential credentials, bool enableSsl)"",""Summary"":""\r\n            Sends the specified message to an SMTP server for delivery.\r\n            ""}",TRUE,mscorlib,TRUE,enableSsl,bool,"
\n            Specify whether the SmtpClient uses Secure Sockets Layer (SSL) to encrypt the connection.
\n            ",,,,
SoapHttpClientProtocol,Scripting.ISoapHttpClientProtocol,"{""Title"":""interface Scripting.ISoapHttpClientProtocol"",""Summary"":""\r\n            SoapHttpClientProtocol\r\n            ""}",FALSE,Scripting,FALSE,GetWebRequest (uri),System.Net.WebRequest,"{""Title"":""WebRequest GetWebRequest (Uri uri)"",""Summary"":""\r\n            GetWebRequest\r\n            ""}",FALSE,System,TRUE,uri,Uri,Uniform Resource Identifier,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameter (value, parameterName, DbType)",Scripting.ISqlParameter,"{""Title"":""ISqlParameter CreateParameter (Object value, string parameterName, SqlDbType DbType)"",""Summary"":""\r\n            Creates an SqlParameter object.\r\n            ""}",FALSE,Scripting,TRUE,value,Object,Value of the parameter as an SQL type.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameter (value, parameterName, DbType)",Scripting.ISqlParameter,"{""Title"":""ISqlParameter CreateParameter (Object value, string parameterName, SqlDbType DbType)"",""Summary"":""\r\n            Creates an SqlParameter object.\r\n            ""}",FALSE,Scripting,TRUE,parameterName,string,Name of the SqlParameter.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"CreateParameter (value, parameterName, DbType)",Scripting.ISqlParameter,"{""Title"":""ISqlParameter CreateParameter (Object value, string parameterName, SqlDbType DbType)"",""Summary"":""\r\n            Creates an SqlParameter object.\r\n            ""}",FALSE,Scripting,TRUE,DbType,SqlDbType,SQL data type,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,CreateTable (tableInfo),Scripting.ISqlHelperInfo,"{""Title"":""ISqlHelperInfo CreateTable (ITableInfo tableInfo)"",""Summary"":""\r\n            Creates a new custom table.\r\n            ""}",FALSE,Scripting,TRUE,tableInfo,ITableInfo,TableInfo containing a table definition including a list of columns.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,Delete (tableInfo),Scripting.ISqlHelperInfo,"{""Title"":""ISqlHelperInfo Delete (ITableInfo tableInfo)"",""Summary"":""\r\n            Deletes data in a custom table.\r\n            ""}",FALSE,Scripting,TRUE,tableInfo,ITableInfo,TableInfo which includes list of TableDataRows with data to delete (only CpqTableEntryId is necessary).,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,DeleteTable (tableName),Scripting.ISqlHelperInfo,"{""Title"":""ISqlHelperInfo DeleteTable (string tableName)"",""Summary"":""\r\n            Deletes a custom table.\r\n            ""}",FALSE,Scripting,TRUE,tableName,string,Name of the table.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetFirst (sql),System.Object,"{""Title"":""Object GetFirst (string sql)"",""Summary"":""\r\n            Gets the first element of an SQL query result, or NULL value if the result is empty.\r\n            ""}",TRUE,mscorlib,TRUE,sql,string,The SQL.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetFirst (sql, parameters)",System.Object,"{""Title"":""Object GetFirst (string sql, ISqlParameter[] parameters)"",""Summary"":""\r\n            Gets the first element of an SQL query result, or NULL value if the result is empty.\r\n            ""}",TRUE,mscorlib,TRUE,sql,string,The SQL.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetFirst (sql, parameters)",System.Object,"{""Title"":""Object GetFirst (string sql, ISqlParameter[] parameters)"",""Summary"":""\r\n            Gets the first element of an SQL query result, or NULL value if the result is empty.\r\n            ""}",TRUE,mscorlib,TRUE,parameters,ISqlParameter[],SQL parameters,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetList (sql),"System.Collections.Generic.IEnumerable`1[[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]","{""Title"":""IEnumerable<Object> GetList (string sql)"",""Summary"":""\r\n            Gets the list object based on the provided SQL query.\r\n            ""}",FALSE,mscorlib,TRUE,sql,string,The SQL.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetList (sql, parameters)","System.Collections.Generic.IEnumerable`1[[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]","{""Title"":""IEnumerable<Object> GetList (string sql, ISqlParameter[] parameters)"",""Summary"":""\r\n            Gets the list object based on the provided SQL query.\r\n            ""}",FALSE,mscorlib,TRUE,sql,string,The SQL.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetList (sql, parameters)","System.Collections.Generic.IEnumerable`1[[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]","{""Title"":""IEnumerable<Object> GetList (string sql, ISqlParameter[] parameters)"",""Summary"":""\r\n            Gets the list object based on the provided SQL query.\r\n            ""}",FALSE,mscorlib,TRUE,parameters,ISqlParameter[],SQL parameters,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetSingle (sql),System.Object,"{""Title"":""Object GetSingle (string sql)"",""Summary"":""\r\n            Gets the only element of an SQL query result, or NULL value if the result is empty"," this method throws an exception if there is more than one element in the result.\r\n            ""}",TRUE,mscorlib,TRUE,sql,string,The SQL.,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetSingle (sql, parameters)",System.Object,"{""Title"":""Object GetSingle (string sql, ISqlParameter[] parameters)"",""Summary"":""\r\n            Gets the only element of an SQL query result, or NULL value if the result is empty"," this method throws an exception if there is more than one element in the result.\r\n            ""}",TRUE,mscorlib,TRUE,sql,string,The SQL.,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetSingle (sql, parameters)",System.Object,"{""Title"":""Object GetSingle (string sql, ISqlParameter[] parameters)"",""Summary"":""\r\n            Gets the only element of an SQL query result, or NULL value if the result is empty"," this method throws an exception if there is more than one element in the result.\r\n            ""}",TRUE,mscorlib,TRUE,parameters,ISqlParameter[],SQL parameters,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetTable (tableName),Scripting.ITableInfo,"{""Title"":""ITableInfo GetTable (string tableName)"",""Summary"":""\r\n            Gets the table information.\r\n            ""}",FALSE,Scripting,TRUE,tableName,string,Name of the table.,,,,
SqlHelper,Scripting.ISqlHelper,"{""Title"":""interface Scripting.ISqlHelper"",""Summary"":""\r\n            Helper class which allows us to pull data from database using SQL select statements.\r\n            <example><h3>Insert/Update example</h3><code language=\""python\"">\r\n            #insert\r\n            tableInfo = SqlHelper.GetTable(\""ITEMMASTERFROMNS\"")\r\n            tablerow = { \""item_internal_id\"" : itemInternalId, \""item_sku\"" : sku }\r\n            tableInfo.AddRow(tablerow)\r\n            upsertResult = SqlHelper.Upsert(tableInfo)\r\n            \r\n            #update\r\n            tablerow = { \""CpqTableEntryId\"" : currentQuoteCpqTableEntryId, \""OpportunityId\"" : oppId, \""QuoteNumber\"" : Quote.CompositeNumber, \""IsPrimary\"" : 1 }\r\n            tableInfo.AddRow(tablerow)\r\n            SqlHelper.Upsert(tableInfo)\r\n            </code><h3>Delete example</h3><code language=\""python\"">\r\n            primaryQueryItems = SqlHelper.GetList(\""select CpqTableEntryId, OpportunityId, QuoteNumber, ItemGuid, OpportunityProductID from OpportunityQuoteItems where OpportunityId = '{0}' and QuoteNumber={1}\"".format(oppId, primaryQuoteNumber))\r\n            tableInfo = SqlHelper.GetTable(\""OpportunityQuoteItems\"")\r\n            for primaryItem in primaryQueryItems:\r\n            \ttableInfo.AddRow(primaryItem)\r\n            SqlHelper.Delete(tableInfo)\r\n            </code></example>""}",FALSE,Scripting,FALSE,Upsert (tableInfo),Scripting.ISqlHelperInfo,"{""Title"":""ISqlHelperInfo Upsert (ITableInfo tableInfo)"",""Summary"":""\r\n            Inserts or Updates data in a custom table.\r\n            ""}",FALSE,Scripting,TRUE,tableInfo,ITableInfo,TableInfo which includes list of TableDataRows with data to upsert.,,,,
TagParserProduct,Scripting.ITagParserProduct,"{""Title"":""interface Scripting.ITagParserProduct"",""Summary"":""\r\n            Tag parser product\r\n            <example><h3>Parsing product tab expression</h3><code language=\""python\"">\r\n            if float(TagParserProduct.ParseString(\""&lt",* TotalPrice *&gt,"\"")) &gt"," 3000:\r\n                Quote.Total.Cost = 300\r\n            </code></example>""}",FALSE,Scripting,FALSE,ParseString (expression),System.String,"{""Title"":""string ParseString (string expression)"",""Summary"":""\r\n            Parses the string.\r\n            This method is not allowed when script has been triggered from CPQ rule\r\n            ""}",TRUE,mscorlib,TRUE,expression,string,The expression.,
TagParserQuote,Scripting.ITagParserQuote,"{""Title"":""interface Scripting.ITagParserQuote"",""Summary"":""\r\n            Tag parser quote\r\n            <example><h3>Parsing quote tab expression</h3><code language=\""python\"">\r\n            if TagParserQuote.ParseString(\""&lt",* CustomerCompany *&gt,"\"") == \""SAP\"":\r\n                Quote.GetCustomField(\""Customer company\"") = \""SAP company\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,ParseString (txt),System.String,"{""Title"":""string ParseString (string txt)"",""Summary"":""\r\n            Parses the string.\r\n            ""}",TRUE,mscorlib,TRUE,txt,string,The TXT.,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,Debug (obj),System.Void,"{""Title"":""void Debug (Object obj)"",""Summary"":""\r\n            This method would add to trace object description data.\r\n            Debug function should be used while trying to figure out IPython script and should be removed in production scripts.\r\n            ""}",TRUE,mscorlib,TRUE,obj,Object,The instance.,,,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,IsOn,System.Boolean,"{""Title"":""bool IsOn"",""Summary"":""\r\n            Indicates whether tracing is enabled in developer console\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,Write (message),System.Void,"{""Title"":""void Write (Object message)"",""Summary"":""\r\n            Writes the specified message to trace.\r\n            ""}",TRUE,mscorlib,TRUE,message,Object,The message.,,,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,"WriteFormat (messageFormat, formatArgs)",System.Void,"{""Title"":""void WriteFormat (Object messageFormat, Object[] formatArgs)"",""Summary"":""\r\n            Writes the specified formatted message to trace.\r\n            Formatting is deferred to be done only if tracing is on.\r\n            An example: Trace.WriteFormat('This {0} is {1}.', 'message','formatted')\r\n            ""}",TRUE,mscorlib,TRUE,messageFormat,Object,The message format.,,,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,"WriteFormat (messageFormat, formatArgs)",System.Void,"{""Title"":""void WriteFormat (Object messageFormat, Object[] formatArgs)"",""Summary"":""\r\n            Writes the specified formatted message to trace.\r\n            Formatting is deferred to be done only if tracing is on.\r\n            An example: Trace.WriteFormat('This {0} is {1}.', 'message','formatted')\r\n            ""}",TRUE,mscorlib,TRUE,formatArgs,Object[],Format arguments.,,,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,WriteStep (message),System.IDisposable,"{""Title"":""IDisposable WriteStep (Object message)"",""Summary"":""\r\n            Writes the step to trace"," useful for tracing code blocks.\r\n            It should be used with the WITH block.\r\n            An example: with Trace.WriteStep(object message): (block of code)\r\n            ""}",FALSE,mscorlib,TRUE,message,Object,The message.,,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,"WriteStepFormat (messageFormat, formatArgs)",System.IDisposable,"{""Title"":""IDisposable WriteStepFormat (Object messageFormat, Object[] formatArgs)"",""Summary"":""\r\n            Writes the step to trace, formats the message"," useful for tracing code blocks.\r\n            It should be used with the WITH block.\r\n            An example: with Trace.WriteStepFormat('This {0} is {1}.', 'message','formatted'): (block of code)\r\n            ""}",FALSE,mscorlib,TRUE,messageFormat,Object,The message format.,,,
Trace,Scripting.ITrace,"{""Title"":""interface Scripting.ITrace"",""Summary"":""\r\n            ITrace write messages to trace.<br />\r\n            Use this class for debugging scripts.\r\n            ""}",FALSE,Scripting,FALSE,"WriteStepFormat (messageFormat, formatArgs)",System.IDisposable,"{""Title"":""IDisposable WriteStepFormat (Object messageFormat, Object[] formatArgs)"",""Summary"":""\r\n            Writes the step to trace, formats the message"," useful for tracing code blocks.\r\n            It should be used with the WITH block.\r\n            An example: with Trace.WriteStepFormat('This {0} is {1}.', 'message','formatted'): (block of code)\r\n            ""}",FALSE,mscorlib,TRUE,formatArgs,Object[],Format arguments.,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (dictionaryId, key)",System.String,"{""Title"":""string Get (int dictionaryId, string key)"",""Summary"":""\r\n            Get translated value from the given dictionary by key.\r\n            <example>\r\n            Set translated value from the specified dictionary to Free Form attribut.<br />\r\n            In this example it is assumed that dictionary id for German dictionary is 2.<br />\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code></example>""}",TRUE,mscorlib,TRUE,dictionaryId,int,Dictionary id,,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (dictionaryId, key)",System.String,"{""Title"":""string Get (int dictionaryId, string key)"",""Summary"":""\r\n            Get translated value from the given dictionary by key.\r\n            <example>\r\n            Set translated value from the specified dictionary to Free Form attribut.<br />\r\n            In this example it is assumed that dictionary id for German dictionary is 2.<br />\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code></example>""}",TRUE,mscorlib,TRUE,key,string,Translation key,,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,Get (key),System.String,"{""Title"":""string Get (string key)"",""Summary"":""\r\n            Get translated value from the current dictionary by key.\r\n            ""}",TRUE,mscorlib,TRUE,key,string,Translation key,,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetFormatted (dictionaryId, key, values)",System.String,"{""Title"":""string GetFormatted (int dictionaryId, string key, String[] values)"",""Summary"":""\r\n            Get formatted translated value from the given dictionary by key.\r\n            <example>\r\n            Set multiple values' formatted translated value from the specified dictionary to Free Form attribute.<br />\r\n            In this example it is assumed that dictionary id for German dictionary is 2.<br />\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted(2, 'CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",TRUE,mscorlib,TRUE,dictionaryId,int,Dictionary id,,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetFormatted (dictionaryId, key, values)",System.String,"{""Title"":""string GetFormatted (int dictionaryId, string key, String[] values)"",""Summary"":""\r\n            Get formatted translated value from the given dictionary by key.\r\n            <example>\r\n            Set multiple values' formatted translated value from the specified dictionary to Free Form attribute.<br />\r\n            In this example it is assumed that dictionary id for German dictionary is 2.<br />\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted(2, 'CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",TRUE,mscorlib,TRUE,key,string,Translation key,,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetFormatted (dictionaryId, key, values)",System.String,"{""Title"":""string GetFormatted (int dictionaryId, string key, String[] values)"",""Summary"":""\r\n            Get formatted translated value from the given dictionary by key.\r\n            <example>\r\n            Set multiple values' formatted translated value from the specified dictionary to Free Form attribute.<br />\r\n            In this example it is assumed that dictionary id for German dictionary is 2.<br />\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted(2, 'CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",TRUE,mscorlib,TRUE,values,String[],Corresponding string representation value(s) which replace the format item(s) in a translated value.,,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetFormatted (key, values)",System.String,"{""Title"":""string GetFormatted (string key, String[] values)"",""Summary"":""\r\n            Get formatted translated value from the dictionary by key.\r\n            <example>\r\n            Set formatted translated value from currently set dictionary to Free Form attribute.<br />\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code></example>""}",TRUE,mscorlib,TRUE,key,string,Translation key,,,,
Translation,Scripting.ITranslation,"{""Title"":""interface Scripting.ITranslation"",""Summary"":""\r\n            Dictionary key/value translation\r\n            <example><h3>Set translated value from the specified dictionary to Free Form attribute</h3>\r\n            In this example it is assumed that dictionary id for German dictionary is 2.\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br /><code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.Get(2, 'CustomDictionary.CurrentlyLoggedUser'))\r\n            </code><h3>Set formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code><h3>Set multiple values' formatted translated value from currently set dictionary to Free Form attribute</h3>\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}, username {{userName}}.<br />\r\n            Data for currently logged user (user's name and username) will be retrieved based on User.Name and User.UserName.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name, 'userName', User.UserName))\r\n            </code></example>""}",FALSE,Scripting,FALSE,"GetFormatted (key, values)",System.String,"{""Title"":""string GetFormatted (string key, String[] values)"",""Summary"":""\r\n            Get formatted translated value from the dictionary by key.\r\n            <example>\r\n            Set formatted translated value from currently set dictionary to Free Form attribute.<br />\r\n            Dictionary key is - CustomDictionary.CurrentlyLoggedUser.<br />\r\n            Value for dictionary key is - Currently logged user: {{user}}.\r\n            <code language=\""python\"">\r\n            Product.Attributes.GetByName('Translation attribute').AssignValue(Translation.GetFormatted('CustomDictionary.CurrentlyLoggedUser', 'user', User.Name))\r\n            </code></example>""}",TRUE,mscorlib,TRUE,values,String[],Corresponding string representation value(s) which replace the format item(s) in a translated value.,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Address1,System.String,"{""Title"":""string Address1"",""Summary"":""\r\n            Gets the address1.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Address2,System.String,"{""Title"":""string Address2"",""Summary"":""\r\n            Gets the address2.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,ApproveParent,Scripting.IUser,"{""Title"":""IUser ApproveParent"",""Summary"":""\r\n            Gets the approve parent.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,BelongsToPermissionGroup (permissionGroup),System.Boolean,"{""Title"":""bool BelongsToPermissionGroup (string permissionGroup)"",""Summary"":""\r\n            Determines whether the user belongs to permission group. This methods applies only to the currently logged-in user.\r\n            ""}",TRUE,mscorlib,TRUE,permissionGroup,string,The permission group name.,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,City,System.String,"{""Title"":""string City"",""Summary"":""\r\n            Gets the city.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Company,Scripting.ICompany,"{""Title"":""ICompany Company"",""Summary"":""\r\n            Gets the company.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Country,System.String,"{""Title"":""string Country"",""Summary"":""\r\n            Gets the country/region.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,CountryAbbreviation,System.String,"{""Title"":""string CountryAbbreviation"",""Summary"":""\r\n            Gets the country abbreviation\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Email,System.String,"{""Title"":""string Email"",""Summary"":""\r\n            Gets the email.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,ExpireDate,System.DateTime,"{""Title"":""DateTime ExpireDate"",""Summary"":""\r\n            Gets the expire date.\r\n            ""}",FALSE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Fax,System.String,"{""Title"":""string Fax"",""Summary"":""\r\n            Gets the fax.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,FirstName,System.String,"{""Title"":""string FirstName"",""Summary"":""\r\n            Gets the first name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetAvailableMarkets,Scripting.IScriptingMarketCollection,"{""Title"":""IScriptingMarketCollection GetAvailableMarkets"",""Summary"":""\r\n            For current user retrieves all available markets\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,GetUserCustomFieldByName (userCustomFieldName),Scripting.IUserCustomField,"{""Title"":""IUserCustomField GetUserCustomFieldByName (string userCustomFieldName)"",""Summary"":""\r\n            Gets the user custom field by custom field name.\r\n            ""}",FALSE,Scripting,TRUE,userCustomFieldName,string,Name of the user custom field.,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Id,System.Int32,"{""Title"":""int Id"",""Summary"":""\r\n            Gets the id.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,IsAdmin,System.Boolean,"{""Title"":""bool IsAdmin"",""Summary"":""\r\n            Gets a value indicating whether this instance is admin.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,IsInPermissionGroup (permissionGroup),System.Boolean,"{""Title"":""bool IsInPermissionGroup (string permissionGroup)"",""Summary"":""\r\n            Determines whether the user belongs to permission group by any criteria (User, User Type, Company). This methods applies only to the currently logged-in user.\r\n            ""}",TRUE,mscorlib,TRUE,permissionGroup,string,The permission group name.,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,LastLogOnClient,System.String,"{""Title"":""string LastLogOnClient"",""Summary"":""\r\n            Gets the last LogOn client.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,LastLogOnIP,System.String,"{""Title"":""string LastLogOnIP"",""Summary"":""\r\n            Gets the last LogOn IP.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,LastLogOnTime,System.DateTime,"{""Title"":""DateTime LastLogOnTime"",""Summary"":""\r\n            Gets the last LogOn time.\r\n            ""}",FALSE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,LastName,System.String,"{""Title"":""string LastName"",""Summary"":""\r\n            Gets the last name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,ManagingParent,Scripting.IUser,"{""Title"":""IUser ManagingParent"",""Summary"":""\r\n            Gets the managing parent.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Multiplier,System.Decimal,"{""Title"":""decimal Multiplier"",""Summary"":""\r\n            Gets the multiplier.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Name,System.String,"{""Title"":""string Name"",""Summary"":""\r\n            Gets the name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,OrderingParent,Scripting.IUser,"{""Title"":""IUser OrderingParent"",""Summary"":""\r\n            Gets the ordering parent.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Phone,System.String,"{""Title"":""string Phone"",""Summary"":""\r\n            Gets the phone.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Province,System.String,"{""Title"":""string Province"",""Summary"":""\r\n            Gets the province.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,RefreshMarkets (),System.Void,"{""Title"":""void RefreshMarkets ()"",""Summary"":""\r\n            Refresh available markets for current user.\r\n            All market visibility formulas will be reevaluated.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,RefreshPricebooks (),System.Void,"{""Title"":""void RefreshPricebooks ()"",""Summary"":""\r\n            Refresh available pricebooks.\r\n            All pricebook visibility formulas for market will be reevaluated.\r\n            ""}",TRUE,mscorlib,TRUE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,SelectedDictionary,Scripting.ISelectedDictionary,"{""Title"":""ISelectedDictionary SelectedDictionary"",""Summary"":""\r\n            Gets the currently selected dictionary for logged in user.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,SetDefaultMarket (marketCode),System.Void,"{""Title"":""void SetDefaultMarket (string marketCode)"",""Summary"":""\r\n            Set default market for current user.\r\n            ""}",TRUE,mscorlib,TRUE,marketCode,string,market code,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,State,System.String,"{""Title"":""string State"",""Summary"":""\r\n            Gets the state.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Territory,Scripting.ITerritory,"{""Title"":""ITerritory Territory"",""Summary"":""\r\n            Gets the territory.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,TimeZone,System.TimeZoneInfo,"{""Title"":""TimeZoneInfo TimeZone"",""Summary"":""\r\n            gets the user time zone\r\n            ""}",FALSE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,Title,System.String,"{""Title"":""string Title"",""Summary"":""\r\n            Gets the title.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,UserCode,System.String,"{""Title"":""string UserCode"",""Summary"":""\r\n            Gets the user code.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,UserCustomFields,Scripting.IUserCustomFieldCollection,"{""Title"":""IUserCustomFieldCollection UserCustomFields"",""Summary"":""\r\n            Gets the user custom fields.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,UserIdCode,System.String,"{""Title"":""string UserIdCode"",""Summary"":""\r\n            Gets the user id code.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,UserName,System.String,"{""Title"":""string UserName"",""Summary"":""\r\n            Gets the user name.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,UserType,Scripting.IUserType,"{""Title"":""IUserType UserType"",""Summary"":""\r\n            Gets the type of the user.\r\n            ""}",FALSE,Scripting,FALSE,null,null,null,,,,
User,Scripting.IUser,"{""Title"":""interface Scripting.IUser"",""Summary"":""\r\n            User\r\n            <example><h3>Setting user's custom field content if user is Flo admin</h3><code language=\""python\"">\r\n            if User.IsFloAdmin:\r\n                User.GetUserCustomFieldByName(\""FloAdmin\"").Content = \""User is Flo admin\""\r\n            </code></example>""}",FALSE,Scripting,FALSE,ZipCode,System.String,"{""Title"":""string ZipCode"",""Summary"":""\r\n            Gets the zip code.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
UserPersonalizationHelper,Scripting.IUserPersonalizationHelper,"{""Title"":""interface Scripting.IUserPersonalizationHelper"",""Summary"":""\r\n            Some IronPython built-in functions used in scripts return values in a format that's different from user's selected format (for example, the function str() returns a string in the format 1234.56 which may cause issues if the user format is 1.234,56).\r\n            To avoid any issues, instead of Iron Python built-in functions, use the IUserPersonalizationHelper methods which will always return values in the user's format.\r\n            ""}",FALSE,Scripting,FALSE,ConvertToNumber (number),System.Decimal,"{""Title"":""decimal ConvertToNumber (string number)"",""Summary"":""\r\n            Converts to number.\r\n            ""}",TRUE,mscorlib,TRUE,number,string,The number.,,,,
UserPersonalizationHelper,Scripting.IUserPersonalizationHelper,"{""Title"":""interface Scripting.IUserPersonalizationHelper"",""Summary"":""\r\n            Some IronPython built-in functions used in scripts return values in a format that's different from user's selected format (for example, the function str() returns a string in the format 1234.56 which may cause issues if the user format is 1.234,56).\r\n            To avoid any issues, instead of Iron Python built-in functions, use the IUserPersonalizationHelper methods which will always return values in the user's format.\r\n            ""}",FALSE,Scripting,FALSE,CovertToDate (date),System.DateTime,"{""Title"":""DateTime CovertToDate (string date)"",""Summary"":""\r\n            Coverts to date.\r\n            ""}",FALSE,mscorlib,TRUE,date,string,The date.,,,,
UserPersonalizationHelper,Scripting.IUserPersonalizationHelper,"{""Title"":""interface Scripting.IUserPersonalizationHelper"",""Summary"":""\r\n            Some IronPython built-in functions used in scripts return values in a format that's different from user's selected format (for example, the function str() returns a string in the format 1234.56 which may cause issues if the user format is 1.234,56).\r\n            To avoid any issues, instead of Iron Python built-in functions, use the IUserPersonalizationHelper methods which will always return values in the user's format.\r\n            ""}",FALSE,Scripting,FALSE,IsDateInUserFormat (date),System.Boolean,"{""Title"":""bool IsDateInUserFormat (string date)"",""Summary"":""\r\n            Determines whether is date in user format.\r\n            ""}",TRUE,mscorlib,TRUE,date,string,The date.,,,,
UserPersonalizationHelper,Scripting.IUserPersonalizationHelper,"{""Title"":""interface Scripting.IUserPersonalizationHelper"",""Summary"":""\r\n            Some IronPython built-in functions used in scripts return values in a format that's different from user's selected format (for example, the function str() returns a string in the format 1234.56 which may cause issues if the user format is 1.234,56).\r\n            To avoid any issues, instead of Iron Python built-in functions, use the IUserPersonalizationHelper methods which will always return values in the user's format.\r\n            ""}",FALSE,Scripting,FALSE,IsNumberInUserFormat (number),System.Boolean,"{""Title"":""bool IsNumberInUserFormat (string number)"",""Summary"":""\r\n            Determines whether is number in user format.\r\n            ""}",TRUE,mscorlib,TRUE,number,string,The number.,,,,
UserPersonalizationHelper,Scripting.IUserPersonalizationHelper,"{""Title"":""interface Scripting.IUserPersonalizationHelper"",""Summary"":""\r\n            Some IronPython built-in functions used in scripts return values in a format that's different from user's selected format (for example, the function str() returns a string in the format 1234.56 which may cause issues if the user format is 1.234,56).\r\n            To avoid any issues, instead of Iron Python built-in functions, use the IUserPersonalizationHelper methods which will always return values in the user's format.\r\n            ""}",FALSE,Scripting,FALSE,ToUserFormat (date),System.String,"{""Title"":""string ToUserFormat (DateTime date)"",""Summary"":""\r\n            To the user format.\r\n            ""}",TRUE,mscorlib,TRUE,date,DateTime,The date.,,,,
UserPersonalizationHelper,Scripting.IUserPersonalizationHelper,"{""Title"":""interface Scripting.IUserPersonalizationHelper"",""Summary"":""\r\n            Some IronPython built-in functions used in scripts return values in a format that's different from user's selected format (for example, the function str() returns a string in the format 1234.56 which may cause issues if the user format is 1.234,56).\r\n            To avoid any issues, instead of Iron Python built-in functions, use the IUserPersonalizationHelper methods which will always return values in the user's format.\r\n            ""}",FALSE,Scripting,FALSE,ToUserFormat (number),System.String,"{""Title"":""string ToUserFormat (decimal number)"",""Summary"":""\r\n            To the user format.\r\n            ""}",TRUE,mscorlib,TRUE,number,decimal,The number.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url)",System.Object,"{""Title"":""Object Load (string providerName, string url)"",""Summary"":""\r\n            Loads web service proxy for the specified URL and provider name.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,providerName,string,Name of the provider.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url)",System.Object,"{""Title"":""Object Load (string providerName, string url)"",""Summary"":""\r\n            Loads web service proxy for the specified URL and provider name.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url, securityUrl)",System.Object,"{""Title"":""Object Load (string providerName, string url, string securityUrl)"",""Summary"":""\r\n            Loads web service proxy for the specified URL, provider name and security URL.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,providerName,string,Name of the provider.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url, securityUrl)",System.Object,"{""Title"":""Object Load (string providerName, string url, string securityUrl)"",""Summary"":""\r\n            Loads web service proxy for the specified URL, provider name and security URL.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url, securityUrl)",System.Object,"{""Title"":""Object Load (string providerName, string url, string securityUrl)"",""Summary"":""\r\n            Loads web service proxy for the specified URL, provider name and security URL.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,securityUrl,string,The security URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url, username, password)",System.Object,"{""Title"":""Object Load (string providerName, string url, string username, string password)"",""Summary"":""\r\n            Loads web service proxy for the specified URL and provider name and user credential.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,providerName,string,Name of the provider.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url, username, password)",System.Object,"{""Title"":""Object Load (string providerName, string url, string username, string password)"",""Summary"":""\r\n            Loads web service proxy for the specified URL and provider name and user credential.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url, username, password)",System.Object,"{""Title"":""Object Load (string providerName, string url, string username, string password)"",""Summary"":""\r\n            Loads web service proxy for the specified URL and provider name and user credential.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,username,string,The username.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"Load (providerName, url, username, password)",System.Object,"{""Title"":""Object Load (string providerName, string url, string username, string password)"",""Summary"":""\r\n            Loads web service proxy for the specified URL and provider name and user credential.<br />\r\n            Supported providers are: <br />\r\n            1. Wsdl <br />\r\n            2. Rest <br />\r\n            3. Rss <br />""}",TRUE,mscorlib,TRUE,password,string,The password.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,Load (url),System.Object,"{""Title"":""Object Load (string url)"",""Summary"":""\r\n            Loads web service proxy for the specified URL.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadImportedWsdlService (providerName, securityServerUrl)",System.Object,"{""Title"":""Object LoadImportedWsdlService (string providerName, string securityServerUrl)"",""Summary"":""\r\n            Load imported wsdl service\r\n            ""}",TRUE,mscorlib,TRUE,providerName,string,provider name,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadImportedWsdlService (providerName, securityServerUrl)",System.Object,"{""Title"":""Object LoadImportedWsdlService (string providerName, string securityServerUrl)"",""Summary"":""\r\n            Load imported wsdl service\r\n            ""}",TRUE,mscorlib,TRUE,securityServerUrl,string,security server url,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, endPoint, url)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string endPoint, string url)"",""Summary"":""\r\n            Loads svc service for the specified URL, basic Http security mode and endPoint.\r\n            ""}",TRUE,mscorlib,TRUE,basicHttpSecurityMode,string,The basic Http security mode.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, endPoint, url)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string endPoint, string url)"",""Summary"":""\r\n            Loads svc service for the specified URL, basic Http security mode and endPoint.\r\n            ""}",TRUE,mscorlib,TRUE,endPoint,string,The service endpoint.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, endPoint, url)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string endPoint, string url)"",""Summary"":""\r\n            Loads svc service for the specified URL, basic Http security mode and endPoint.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, url)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string url)"",""Summary"":""\r\n            Loads svc service for the specified URL and basic Http security mode.\r\n            ""}",TRUE,mscorlib,TRUE,basicHttpSecurityMode,string,The basic Http security mode.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, url)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string url)"",""Summary"":""\r\n            Loads svc service for the specified URL and basic Http security mode.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, basic Http security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,basicHttpSecurityMode,string,The basic Http security mode.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, basic Http security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, basic Http security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,username,string,The username.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (basicHttpSecurityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string basicHttpSecurityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, basic Http security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,password,string,The password.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (binding, securityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string binding, string securityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, binding, security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,binding,string,The binding.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (binding, securityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string binding, string securityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, binding, security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,securityMode,string,The security mode.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (binding, securityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string binding, string securityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, binding, security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (binding, securityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string binding, string securityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, binding, security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,username,string,The username.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,"LoadSvcService (binding, securityMode, url, username, password)",System.Object,"{""Title"":""Object LoadSvcService (string binding, string securityMode, string url, string username, string password)"",""Summary"":""\r\n            Loads svc service for the specified URL, binding, security mode, username and password.\r\n            ""}",TRUE,mscorlib,TRUE,password,string,The password.,,,,
WebServiceHelper,Scripting.IWebServiceHelper,"{""Title"":""interface Scripting.IWebServiceHelper"",""Summary"":""\r\n            Web service helper class\r\n            ""}",FALSE,Scripting,FALSE,LoadSvcService (url),System.Object,"{""Title"":""Object LoadSvcService (string url)"",""Summary"":""\r\n            Loads svc service for the specified URL.\r\n            ""}",TRUE,mscorlib,TRUE,url,string,The URL.,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,BreakWorkflowExecution,System.Boolean,"{""Title"":""bool BreakWorkflowExecution"",""Summary"":""\r\n            Gets or sets flag indicating if the action execution chain should be canceled.\r\n            If validation in scripting pre-action fails and the action execution should be canceled, \r\n            set BreakWorkflowExecution = True.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,ChangeQuoteStatus,System.Boolean,"{""Title"":""bool ChangeQuoteStatus"",""Summary"":""\r\n            Should be used for custom actions to change the quote status as defined in the workflow.\r\n            If this flag is set to TRUE, when the custom action is executed through scripting, the quote status will change as set up in the workflow.\r\n            Otherwise, if set to FALSE, the quote status will not change regardless of the workflow settings.\r\n            <h3> Set ChangeQuoteStatus flag to true on Quote 2.0 </h3><code language=\""python\"">\r\n            context.WorkflowContext.ChangeQuoteStatus = True\r\n            </code><h3> Set ChangeQuoteStatus flag to true on Quote 1.0 </h3><code language=\""python\"">\r\n            WorkflowContext.ChangeQuoteStatus = True\r\n            </code>""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,ClientData,System.Object,"{""Title"":""Object ClientData"",""Summary"":""\r\n            Gets or sets the data that will be sent to the client.\r\n            Please see <conceptualLink target=\""WorkflowContext_ClientData_rendering\"" /> for example usage.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,ClientScript,System.String,"{""Title"":""string ClientScript"",""Summary"":""\r\n            Gets or sets the client script, which will be executed on the client (browser).\r\n            This property is DEPRECIATED in responsive design and will be ignored.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,Custom,System.Object,"{""Title"":""Object Custom"",""Summary"":""\r\n            Gets action specified argument.\r\n            Argument is carring additional data needed for the action execution \r\n            (for example, new status id for change status).\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,Message,System.String,"{""Title"":""string Message"",""Summary"":""\r\n            Gets or sets the message related to the action execution result.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,NewCartId,"System.Nullable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]","{""Title"":""Nullable<int> NewCartId"",""Summary"":""\r\n            Gets new cart id.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,NewOwnerId,"System.Nullable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]","{""Title"":""Nullable<int> NewOwnerId"",""Summary"":""\r\n            Gets new owner id.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,RedirectToURL,System.String,"{""Title"":""string RedirectToURL"",""Summary"":""\r\n            Gets or sets the redirect to URL.\r\n            Application will redirect to this URL after the action has been executed.\r\n            Both relative and absolute URLs are supported. Absolute URL's should start with 'http://'.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
WorkflowContext,Scripting.IWorkflowContext,"{""Title"":""interface Scripting.IWorkflowContext"",""Summary"":""\r\n            This class is shared within pre and post actions.\r\n            ""}",FALSE,Scripting,FALSE,Success,System.Boolean,"{""Title"":""bool Success"",""Summary"":""\r\n            Gets or sets flag indicating if action is executed successfully.\r\n            If validation in scripting pre-action fails, set Success = False.\r\n            ""}",TRUE,mscorlib,FALSE,null,null,null,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,"CreateXmlNode (nodeName, childNodes)",System.Xml.XmlNode,"{""Title"":""XmlNode CreateXmlNode (string nodeName, XmlNode[] childNodes)"",""Summary"":""\r\n            Create XML Node with specified node name and node child(ren).\r\n            ""}",FALSE,System.Xml,TRUE,nodeName,string,Node name,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,"CreateXmlNode (nodeName, childNodes)",System.Xml.XmlNode,"{""Title"":""XmlNode CreateXmlNode (string nodeName, XmlNode[] childNodes)"",""Summary"":""\r\n            Create XML Node with specified node name and node child(ren).\r\n            ""}",FALSE,System.Xml,TRUE,childNodes,XmlNode[],Node child(ren),,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,"CreateXmlNode (nodeName, nodeValue)",System.Xml.XmlNode,"{""Title"":""XmlNode CreateXmlNode (string nodeName, Object nodeValue)"",""Summary"":""\r\n            Create XML Node with specified node name and node value.\r\n            ""}",FALSE,System.Xml,TRUE,nodeName,string,Node name,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,"CreateXmlNode (nodeName, nodeValue)",System.Xml.XmlNode,"{""Title"":""XmlNode CreateXmlNode (string nodeName, Object nodeValue)"",""Summary"":""\r\n            Create XML Node with specified node name and node value.\r\n            ""}",FALSE,System.Xml,TRUE,nodeValue,Object,Node value,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,Load (stream),System.Xml.XmlElement,"{""Title"":""XmlElement Load (Stream stream)"",""Summary"":""\r\n            Loads XML document for the specified stream.\r\n            ""}",FALSE,System.Xml,TRUE,stream,Stream,The stream.,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,Load (text),System.Xml.XmlElement,"{""Title"":""XmlElement Load (string text)"",""Summary"":""\r\n            Loads XML document for the specified text.\r\n            ""}",FALSE,System.Xml,TRUE,text,string,The text.,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,SerializeObject (o),System.String,"{""Title"":""string SerializeObject (T o)"",""Summary"":""""}",TRUE,mscorlib,TRUE,o,T,,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,"SetAttribute (node, attribute, value)",System.Void,"{""Title"":""void SetAttribute (XmlNode node, string attribute, Object value)"",""Summary"":""\r\n            Set attribute to specified node\r\n            ""}",TRUE,mscorlib,TRUE,node,XmlNode,,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,"SetAttribute (node, attribute, value)",System.Void,"{""Title"":""void SetAttribute (XmlNode node, string attribute, Object value)"",""Summary"":""\r\n            Set attribute to specified node\r\n            ""}",TRUE,mscorlib,TRUE,attribute,string,,,,,
XmlHelper,Scripting.IXmlHelper,"{""Title"":""interface Scripting.IXmlHelper"",""Summary"":""\r\n            Xml helper\r\n            ""}",FALSE,Scripting,FALSE,"SetAttribute (node, attribute, value)",System.Void,"{""Title"":""void SetAttribute (XmlNode node, string attribute, Object value)"",""Summary"":""\r\n            Set attribute to specified node\r\n            ""}",TRUE,mscorlib,TRUE,value,Object,,,,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Delete (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Delete (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP DELETE JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,DeserializeJson (input),System.Object,"{""Title"":""Object DeserializeJson (string input)"",""Summary"":""\r\n            Deserializes the specified JSON input\r\n            ""}",TRUE,mscorlib,TRUE,input,string,The input string for deserialization,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri)",System.Object,"{""Title"":""Object Get (string certificateName, string uri)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri)",System.Object,"{""Title"":""Object Get (string certificateName, string uri)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, headers)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, headers)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, headers)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Get (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Get (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP GET JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Patch (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Patch (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri)",System.Object,"{""Title"":""Object Post (string certificateName, string uri)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri)",System.Object,"{""Title"":""Object Post (string certificateName, string uri)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters)"",""Summary"":""\r\n             HTTP POST JSON method\r\n             ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,contentType,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,compressBody,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, contentType, compressBody, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, string contentType, bool compressBody, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,Object> parameters, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,requestHeaders,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,content,MultipartFormDataContent,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, requestHeaders, content, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, IDictionary<string,string> requestHeaders, MultipartFormDataContent content, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Post (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Post (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP POST JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri)",System.Object,"{""Title"":""Object Put (string certificateName, string uri)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri)",System.Object,"{""Title"":""Object Put (string certificateName, string uri)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters)"",""Summary"":""\r\n             HTTP PUT JSON method\r\n             ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,certificateName,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,uri,string,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,parameters,"IDictionary<string,Object>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,headers,"IDictionary<string,string>",,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, headers, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, IDictionary<string,Object> parameters, IDictionary<string,string> headers, bool returnHeadersAndCookies)"",""Summary"":""""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,parameters,string,POST request parameters,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, parameters, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, string parameters, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,certificateName,string,Name of client certificate authentication certificate,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,uri,string,Specified API URL,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,"Put (certificateName, uri, returnHeadersAndCookies)",System.Object,"{""Title"":""Object Put (string certificateName, string uri, bool returnHeadersAndCookies)"",""Summary"":""\r\n            HTTP PUT JSON method\r\n            ""}",TRUE,mscorlib,TRUE,returnHeadersAndCookies,bool,Parameter to determine whether response headers and cookies should be presented in response or not.,
mTLSRestClient,Scripting.ImutualTLSRestClient,"{""Title"":""interface Scripting.ImutualTLSRestClient"",""Summary"":""\r\n            Client for communication with RESTful services using client certificates generated/uploaded via Cerificate Management feature: Setup -&gt", Security -&gt, Certificate Management -&gt," System Certificates (name of the certificate with Client Certificate Authentication purpose).\r\n            <example><h3>Call current weather data for one location</h3>\r\n            Call service with providing city name and country/region code. API responds with a list of results that match a searching word.<br />\r\n            API call:<br />\r\n            http://api.openweathermap.org/data/2.5/weather?q={city name},{country/region code}<br />\r\n            Parameters:<br />\r\n            q city name and country/region code divided by comma, use ISO 3166 country/region codes\r\n            <code language=\""python\"">\r\n            #response is in JSON form of:\r\n            #{\""main\"":{\""temp\"":291.05,\""pressure\"":1016,\""humidity\"":88,\""temp_min\"":288.15,\""temp_max\"":296.15},\r\n            #\""weather\"":[{\""id\"":701,\""main\"":\""Mist\"",\""description\"":\""mist\"",\""icon\"":\""50n\""}],\r\n            #\""id\"":5391959,\""name\"":\""San Francisco\"",\""cod\"":200,\""base\"":\""stations\""}\r\n            response = mTLSRestClient.Get('ApiCertificate', 'http://api.openweathermap.org/data/2.5/weather?q=SanFrancisco,usa')\r\n            \r\n            Quote.GetCustomField('City').Content = response.name\r\n            \r\n            Quote.GetCustomField('Weather Today').Content = str(response.weather[0].main)\r\n            Quote.GetCustomField('Weather Today Details').Content = str(response.weather[0].description)\r\n            \r\n            Quote.GetCustomField('Weather Temperature MIX').Content = str(response.main.temp_max)\r\n            Quote.GetCustomField('Weather Temperature MAX').Content = str(response.main.temp_min)\r\n            </code><h3>Submit an HTTPS POST request with client certificate  authentication and JSON input data to the server</h3>\r\n            Submits JSON data to be processed to a specified resource and returns JSON response.<br />\r\n            Response is deserialized, in order to be used as object in scripting.<br /><code language=\""python\"">\r\n            #example of url service\r\n            url = 'https://testcallidus.com/CallidusPortal/services/some-example-service'\r\n            \r\n            headers = { }\r\n            \r\n            #example of input JSON data\r\n            data = '[{\""name\"": \""SaaS Net New Revenue\"", \""periodType\"": \""month\"", \""type\"": \""Measurement\"", \""value\"": { \""amount\"": 100, \""unitType\"": \""USD\"" }}]'\r\n            \r\n            #make HTTPS POST and receive response in form of dynamic entity\r\n            response = mTLSRestClient.Post('AuthorizationCertificate' ,url, data, headers)\r\n            \r\n            #Populate Quote custom fields\r\n            Quote.GetCustomField('Bonus type').Content = response.name\r\n            Quote.GetCustomField('Bonus amount').Content = str(response.value.amount)\r\n            Quote.GetCustomField('Bonut unit type').Content = response.value.unitType\r\n            </code></example>""}",FALSE,Scripting,FALSE,SerializeToJson (obj),System.String,"{""Title"":""string SerializeToJson (Object obj)"",""Summary"":""\r\n            Deserializes the specified entity to JSON\r\n            ""}",TRUE,mscorlib,TRUE,obj,Object,Enitity for serialization,
